import {InlineConfig} from 'vite'

export declare function buildStaticFiles(options: StaticBuildOptions): Promise<{
  chunks: ChunkStats[]
}>

export declare interface ChunkModule {
  name: string
  originalLength: number
  renderedLength: number
}

export declare interface ChunkStats {
  name: string
  modules: ChunkModule[]
}

export declare interface DevServer {
  close(): Promise<void>
}

export declare interface DevServerOptions {
  cwd: string
  basePath: string
  staticPath: string
  httpPort: number
  httpHost?: string
  projectName?: string
  reactStrictMode: boolean
  vite?: (config: InlineConfig) => InlineConfig
}

/**
 * Resolves the path to the studio configuration file with the following extensions,
 * in preferred order: '.mjs', '.js', '.ts', '.jsx', '.tsx' (aligns with vite)
 *
 * Falls back to the default studio configuration exported by `sanity` if none is found
 *
 * @internal
 */
export declare function getSanityStudioConfigPath(studioRootPath: string): Promise<string>

export declare interface PreviewServer {
  urls: {
    local: string[]
    network: string[]
  }
  close(): Promise<void>
}

export declare interface PreviewServerOptions {
  root: string
  cwd: string
  basePath: string
  httpPort: number
  httpHost?: string
  vite?: (config: InlineConfig) => InlineConfig
}

export declare function startDevServer(options: DevServerOptions): Promise<DevServer>

export declare function startPreviewServer(options: PreviewServerOptions): Promise<PreviewServer>

export declare interface StaticBuildOptions {
  cwd: string
  basePath: string
  outputDir: string
  minify?: boolean
  profile?: boolean
  sourceMap?: boolean
  vite?: (config: InlineConfig) => InlineConfig
}

export {}
