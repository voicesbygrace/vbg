{"version":3,"file":"desk-1adf8eb2.js","sources":["../../src/desk/components/DocTitle.tsx","../../src/desk/components/TimeAgo.tsx","../../src/desk/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/desk/components/PublishedStatus.tsx","../../src/desk/components/DraftStatus.tsx","../../src/desk/components/paneItem/PaneItemPreview.tsx","../../src/desk/components/paneRouter/PaneRouterContext.tsx","../../src/desk/components/paneRouter/BackLink.tsx","../../src/desk/components/paneRouter/ChildLink.tsx","../../src/desk/components/paneRouter/ReferenceChildLink.tsx","../../src/desk/components/paneRouter/ParameterizedLink.tsx","../../src/desk/components/paneRouter/usePaneRouter.ts","../../src/desk/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/desk/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/desk/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/desk/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/desk/components/confirmDeleteDialog/index.tsx","../../src/desk/components/pane/PaneContextMenuButton.tsx","../../src/desk/components/pane/constants.ts","../../src/desk/components/pane/PaneContext.ts","../../src/desk/components/pane/PaneLayoutContext.ts","../../src/desk/components/pane/usePaneLayout.ts","../../src/desk/components/pane/PaneDivider.tsx","../../src/desk/components/pane/Pane.tsx","../../src/desk/components/pane/usePane.ts","../../src/desk/components/pane/PaneContent.styles.tsx","../../src/desk/components/pane/PaneContent.tsx","../../src/desk/components/pane/PaneFooter.styles.tsx","../../src/desk/components/pane/PaneFooter.tsx","../../src/desk/components/pane/PaneHeader.styles.tsx","../../src/desk/components/pane/PaneHeader.tsx","../../src/desk/components/pane/PaneLayout.styles.tsx","../../src/desk/components/IntentButton.tsx","../../src/desk/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/desk/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/desk/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/desk/documentActions/DeleteAction.tsx","../../src/desk/documentActions/DiscardChangesAction.tsx","../../src/desk/documentActions/DuplicateAction.tsx","../../src/desk/documentActions/HistoryRestoreAction.tsx","../../src/desk/panes/document/DocumentPaneContext.ts","../../src/desk/panes/document/useDocumentPane.tsx","../../src/desk/documentActions/PublishAction.tsx","../../src/desk/documentActions/UnpublishAction.tsx","../../src/desk/documentBadges/LiveEditBadge.ts","../../src/desk/constants.ts","../../src/desk/getIntentState.ts","../../src/desk/router.ts","../../src/desk/deskTool.ts","../../src/desk/DeskToolContext.ts","../../src/desk/structureBuilder/SerializeError.ts","../../src/desk/structureBuilder/util/getExtendedProjection.ts","../../src/desk/structureBuilder/Sort.ts","../../src/desk/structureBuilder/MenuItem.ts","../../src/desk/structureBuilder/MenuItemGroup.ts","../../src/desk/structureBuilder/util/validateId.ts","../../src/desk/structureBuilder/Component.ts","../../src/desk/structureBuilder/views/View.ts","../../src/desk/structureBuilder/views/ComponentView.ts","../../src/desk/structureBuilder/views/FormView.ts","../../src/desk/structureBuilder/views/index.ts","../../src/desk/structureBuilder/Document.ts","../../src/desk/structureBuilder/Layout.ts","../../src/desk/structureBuilder/Intent.ts","../../src/desk/structureBuilder/InitialValueTemplateItem.ts","../../src/desk/structureBuilder/GenericList.ts","../../src/desk/structureBuilder/DocumentList.ts","../../src/desk/structureBuilder/List.ts","../../src/desk/structureBuilder/ListItem.ts","../../src/desk/structureBuilder/DocumentListItem.ts","../../src/desk/structureBuilder/DocumentTypeList.ts","../../src/desk/structureBuilder/documentTypeListItems.ts","../../src/desk/structureBuilder/createStructureBuilder.ts","../../src/desk/DeskToolProvider.tsx"],"sourcesContent":["import {SanityDocumentLike} from '@sanity/types'\nimport React from 'react'\nimport {useSchema, unstable_useValuePreview as useValuePreview} from 'sanity'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n\n  const {error, value} = useValuePreview({\n    schemaType: schemaType!,\n    value: documentValue,\n  })\n\n  if (!schemaType) {\n    return <code>Unknown schema type: {documentValue._type}</code>\n  }\n\n  if (error) {\n    return <>Error: {error.message}</>\n  }\n\n  return <>{value?.title || <span style={{color: 'var(--card-muted-fg-color)'}}>Untitled</span>}</>\n}\n","import React from 'react'\nimport {useTimeAgo} from 'sanity'\n\nexport interface TimeAgoProps {\n  time: string | Date\n}\n\nexport function TimeAgo({time}: TimeAgoProps) {\n  const timeAgo = useTimeAgo(time)\n\n  return <span title={timeAgo}>{timeAgo} ago</span>\n}\n","import {useMemo} from 'react'\nimport {ClientError, SanityClient} from '@sanity/client'\nimport {Observable, timer, fromEvent, EMPTY, of} from 'rxjs'\nimport {\n  map,\n  startWith,\n  distinctUntilChanged,\n  switchMap,\n  shareReplay,\n  catchError,\n} from 'rxjs/operators'\nimport {\n  AvailabilityResponse,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  DocumentStore,\n  useDocumentStore,\n  createHookFromObservableFactory,\n  getDraftId,\n  getPublishedId,\n  useClient,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY\n      ),\n      shareReplay({refCount: true, bufferSize: 1})\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient}\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    })\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient}\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          })\n        )\n    })\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000}\n    ) as Observable<ReferringDocuments['internalReferences']>\n  }\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        })\n      )\n    )\n  }\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId])\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient])\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean)\n      )\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== '')\n      )\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string'\n      )\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import React from 'react'\nimport {PublishIcon} from '@sanity/icons'\nimport {PreviewValue, SanityDocument} from '@sanity/types'\nimport {Box, Text, Tooltip} from '@sanity/ui'\nimport {TimeAgo} from './TimeAgo'\nimport {TextWithTone} from 'sanity'\n\nexport function PublishedStatus(props: {document?: PreviewValue | Partial<SanityDocument> | null}) {\n  const {document} = props\n  const updatedAt = document && '_updatedAt' in document && document._updatedAt\n\n  return (\n    <Tooltip\n      portal\n      content={\n        <Box padding={2}>\n          <Text size={1}>\n            {document ? (\n              <>Published {updatedAt && <TimeAgo time={updatedAt} />}</>\n            ) : (\n              <>Not published</>\n            )}\n          </Text>\n        </Box>\n      }\n    >\n      <TextWithTone tone=\"positive\" dimmed={!document} muted={!document} size={1}>\n        <PublishIcon />\n      </TextWithTone>\n    </Tooltip>\n  )\n}\n","import React from 'react'\nimport {EditIcon} from '@sanity/icons'\nimport {PreviewValue, SanityDocument} from '@sanity/types'\nimport {Box, Text, Tooltip} from '@sanity/ui'\nimport {TimeAgo} from './TimeAgo'\nimport {TextWithTone} from 'sanity'\n\nexport function DraftStatus(props: {document?: PreviewValue | Partial<SanityDocument> | null}) {\n  const {document} = props\n  const updatedAt = document && '_updatedAt' in document && document._updatedAt\n\n  return (\n    <Tooltip\n      portal\n      content={\n        <Box padding={2}>\n          <Text size={1}>\n            {document ? (\n              <>Edited {updatedAt && <TimeAgo time={updatedAt} />}</>\n            ) : (\n              <>No unpublished edits</>\n            )}\n          </Text>\n        </Box>\n      }\n    >\n      <TextWithTone tone=\"caution\" dimmed={!document} muted={!document} size={1}>\n        <EditIcon />\n      </TextWithTone>\n    </Tooltip>\n  )\n}\n","import type {SanityDocument, SchemaType} from '@sanity/types'\nimport React, {isValidElement} from 'react'\nimport {isNumber, isString} from 'lodash'\nimport {Inline} from '@sanity/ui'\nimport {useMemoObservable} from 'react-rx'\nimport {PublishedStatus} from '../PublishedStatus'\nimport {DraftStatus} from '../DraftStatus'\nimport type {PaneItemPreviewState} from './types'\nimport {\n  DocumentPresence,\n  DocumentPreviewPresence,\n  DocumentPreviewStore,\n  GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  isRecord,\n} from 'sanity'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: React.ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n  const title =\n    (isRecord(value.title) && isValidElement(value.title)) ||\n    isString(value.title) ||\n    isNumber(value.title)\n      ? value.title\n      : null\n\n  // NOTE: this emits sync so can never be null\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const {draft, published, isLoading} = useMemoObservable<PaneItemPreviewState>(\n    () => getPreviewStateObservable(props.documentPreviewStore, schemaType, value._id, title),\n    [props.documentPreviewStore, schemaType, value._id, title]\n  )!\n\n  const status = isLoading ? null : (\n    <Inline space={4}>\n      {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n      <PublishedStatus document={published} />\n      <DraftStatus document={draft} />\n    </Inline>\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({value, draft, published})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n    />\n  )\n}\n","import {createContext} from 'react'\nimport {PaneRouterContextValue} from './types'\n\nfunction missingContext<T = unknown>(): T {\n  throw new Error('Pane is missing router context')\n}\n\n/**\n * @beta\n */\nexport const PaneRouterContext = createContext<PaneRouterContextValue>({\n  index: 0,\n  groupIndex: 0,\n  siblingIndex: 0,\n  payload: undefined,\n  params: {},\n  hasGroupSiblings: false,\n  groupLength: 0,\n  routerPanesState: [],\n  BackLink: () => missingContext(),\n  ChildLink: () => missingContext(),\n  ReferenceChildLink: () => missingContext(),\n  handleEditReference: () => missingContext(),\n  ParameterizedLink: () => missingContext(),\n  replaceCurrent: () => missingContext(),\n  closeCurrent: () => missingContext(),\n  duplicateCurrent: () => missingContext(),\n  setView: () => missingContext(),\n  setParams: () => missingContext(),\n  setPayload: () => missingContext(),\n  navigateIntent: () => missingContext(),\n})\n","import React, {forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {BackLinkProps} from './types'\nimport {StateLink} from 'sanity/router'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as React.ComponentType<BackLinkProps>\n","import React, {forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {ChildLinkProps} from './types'\nimport {StateLink} from 'sanity/router'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import React, {forwardRef} from 'react'\nimport {toString as pathToString} from '@sanity/util/paths'\nimport {ChildLink} from './ChildLink'\nimport {ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import React, {forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {useUnique} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: React.ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {useContext} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {PaneRouterContextValue} from './types'\n\n/**\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import React, {useCallback} from 'react'\nimport type {SanityDocument, SchemaType} from '@sanity/types'\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\nimport {\n  FIXME,\n  PreviewCard,\n  getPublishedId,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: React.ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id]\n  )\n\n  return (\n    <PreviewCard\n      __unstable_focusRing\n      as={Link as FIXME}\n      data-as=\"a\"\n      onClick={onClick}\n      padding={2}\n      radius={2}\n    >\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"default\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {rem, Flex, Text, Card, Box, Tooltip, Container, Inline} from '@sanity/ui'\nimport {InfoOutlineIcon} from '@sanity/icons'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const TableContainer = styled(Box).attrs({paddingX: 2, paddingBottom: 2})`\n  overflow: auto;\n  max-height: 150px;\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  thead > tr {\n    position: sticky;\n    top: 0;\n    background: var(--card-bg-color);\n    z-index: 1;\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 35px;\n`\n\nexport const ReferencesCard = styled(Card).attrs({\n  radius: 2,\n  shadow: 1,\n  marginBottom: 4,\n  flex: 'auto',\n})`\n  overflow: hidden;\n  min-height: 150px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Inline space={2}>\n      <Text size={1} muted>\n        {difference} other reference{difference === 1 ? '' : 's'} not shown{' '}\n      </Text>\n\n      <Tooltip\n        portal\n        placement=\"top\"\n        content={\n          <Container width={0}>\n            <Box padding={2}>\n              <Text size={1}>\n                We can't show metadata about these references because no token with access to the\n                datasets they are in was found.\n              </Text>\n            </Box>\n          </Container>\n        }\n      >\n        <Text size={1} muted>\n          <InfoOutlineIcon />\n        </Text>\n      </Tooltip>\n    </Inline>\n  )\n}\n","import React, {useCallback} from 'react'\nimport {\n  WarningOutlineIcon,\n  DocumentsIcon,\n  ClipboardIcon,\n  UnknownIcon,\n  ChevronDownIcon,\n} from '@sanity/icons'\nimport {useToast, Text, Box, Button, Flex, Label, Card, Stack} from '@sanity/ui'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {ReferringDocuments} from './useReferringDocuments'\nimport {\n  ReferencesCard,\n  OtherReferenceCount,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  TableContainer,\n  Table,\n  ChevronWrapper,\n  DocumentIdFlex,\n} from './ConfirmDeleteDialogBody.styles'\nimport {SanityDefaultPreview, useSchema} from 'sanity'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: string\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title=\"Preview Unavailable\"\n            subtitle={`ID: ${item._id}`}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, onReferenceLinkClick]\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\">\n        Are you sure you want to delete <strong>“{documentTitle}”</strong>?\n      </Text>\n    )\n  }\n\n  const documentCount =\n    crossDatasetReferences.totalCount === 1\n      ? '1 document'\n      : `${crossDatasetReferences.totalCount.toLocaleString()} documents`\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n  const datasetsCount =\n    normalizedDatasetNames.length === 1\n      ? 'another dataset'\n      : `${normalizedDatasetNames.length} datasets`\n\n  let datasetNameList = `Dataset${\n    normalizedDatasetNames.length === 1 ? '' : 's'\n  }: ${normalizedDatasetNames.join(', ')}`\n\n  // We only have one dataset, and it is unavailable due to permissions\n  if (hasUnknownDatasetNames && normalizedDatasetNames.length === 1) {\n    datasetNameList = 'Unavailable dataset'\n  }\n\n  return (\n    <>\n      <Card padding={3} radius={2} tone=\"caution\" marginBottom={4} flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              {totalCount === 1 ? (\n                <>1 document refers to “{documentTitle}”</>\n              ) : (\n                <>\n                  {totalCount.toLocaleString()} documents refer to “{documentTitle}”\n                </>\n              )}\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n\n      <Box flex=\"none\" marginBottom={4}>\n        <Text>\n          You may not be able to {action} “{documentTitle}” because the following documents refer to\n          it:\n        </Text>\n      </Box>\n\n      <ReferencesCard>\n        <Flex direction=\"column\" height=\"fill\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" padding={3} space={3} overflow=\"auto\" data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box as=\"li\" key={item._id}>\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Flex padding={4} align=\"center\">\n                  <Box marginRight={4}>\n                    <Text size={3}>\n                      <DocumentsIcon />\n                    </Text>\n                  </Box>\n                  <Flex marginRight={4} direction=\"column\">\n                    <Box marginBottom={2}>\n                      <Text>\n                        {documentCount} in {datasetsCount}\n                      </Text>\n                    </Box>\n                    <Box>\n                      <Text title={datasetNameList} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetNameList}\n                      </Text>\n                    </Box>\n                  </Flex>\n                  <ChevronWrapper>\n                    <Text muted>\n                      <ChevronDownIcon />\n                    </Text>\n                  </ChevronWrapper>\n                </Flex>\n              </CrossDatasetReferencesSummary>\n\n              <TableContainer>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Label muted size={0}>\n                          Project ID\n                        </Label>\n                      </th>\n                      <th>\n                        <Label muted size={0}>\n                          Dataset\n                        </Label>\n                      </th>\n                      <th>\n                        <Label muted size={0}>\n                          Document ID\n                        </Label>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        // eslint-disable-next-line react/no-array-index-key\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <CopyToClipboard\n                                  text={documentId}\n                                  // eslint-disable-next-line react/jsx-no-bind\n                                  onCopy={() => {\n                                    // TODO: this isn't visible with the dialog open\n                                    toast.push({\n                                      title: 'Copied document ID to clipboard!',\n                                      status: 'success',\n                                    })\n                                  }}\n                                >\n                                  <Button\n                                    title=\"Copy ID to clipboard\"\n                                    mode=\"bleed\"\n                                    icon={ClipboardIcon}\n                                    fontSize={0}\n                                  />\n                                </CopyToClipboard>\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n                <Box padding={2}>\n                  <OtherReferenceCount {...crossDatasetReferences} />\n                </Box>\n              </TableContainer>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </ReferencesCard>\n\n      <Box flex=\"none\">\n        <Text>\n          If you {action} this document, documents that refer to it will no longer be able to access\n          it.\n        </Text>\n      </Box>\n    </>\n  )\n}\n","import React, {useMemo, useId} from 'react'\nimport styled from 'styled-components'\nimport {Box, Dialog, Button, Text, Spinner, Grid, Flex} from '@sanity/ui'\nimport {DocTitle} from '../DocTitle'\nimport {useReferringDocuments} from './useReferringDocuments'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\n\n/** @internal */\nexport const DialogBody = styled(Flex).attrs({\n  padding: 4,\n  direction: 'column',\n  height: 'fill',\n})`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 300px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: string\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const capitalizedAction = `${action.substring(0, 1).toUpperCase()}${action.substring(1)}`\n\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={`${capitalizedAction} document?`}\n      footer={\n        <Grid columns={showConfirmButton ? 2 : 1} gap={2} paddingX={4} paddingY={3}>\n          <Button mode=\"ghost\" onClick={onCancel} text=\"Cancel\" />\n\n          {showConfirmButton && (\n            <Button\n              data-testid=\"confirm-delete-button\"\n              text={totalCount > 0 ? `${capitalizedAction} anyway` : `${capitalizedAction} now`}\n              tone=\"critical\"\n              onClick={onConfirm}\n            />\n          )}\n        </Grid>\n      }\n      onClose={onCancel}\n      onClickOutside={onCancel}\n      // Custom portal element configured in `DocumentPane` so that the dialog is scoped to the current pane\n      portal=\"documentPanelPortalElement\"\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <Spinner muted />\n            <Box marginTop={3}>\n              <Text align=\"center\" muted size={1}>\n                Looking for referring documents…\n              </Text>\n            </Box>\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import React, {useCallback, useState, useId} from 'react'\nimport {Box, Flex, Button, Dialog, Text, ErrorBoundary} from '@sanity/ui'\nimport {ConfirmDeleteDialog, ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<React.ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header=\"Error\"\n      footer={\n        <Flex paddingX={4} paddingY={3} direction=\"column\">\n          <Button mode=\"ghost\" text=\"Retry\" onClick={handleRetry} />\n        </Flex>\n      }\n      onClose={props.onCancel}\n      // Custom portal element configured in `DocumentPane` so that the dialog is scoped to the current pane\n      portal=\"documentPanelPortalElement\"\n    >\n      <Box padding={4}>\n        <Text>An error occurred while loading referencing documents.</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import {EllipsisVerticalIcon} from '@sanity/icons'\nimport {Box, Button, Label, Menu, MenuButton, MenuDivider, MenuItem, PopoverProps} from '@sanity/ui'\nimport React, {forwardRef, Fragment, useCallback, useMemo, useId} from 'react'\nimport {PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {IntentLink} from 'sanity/router'\n\ninterface PaneContextMenuButtonProps {\n  items: PaneMenuItem[]\n  itemGroups?: PaneMenuItemGroup[]\n  onAction: (action: PaneMenuItem) => void\n}\n\ninterface MenuItemGroup {\n  id: string\n  title?: React.ReactNode\n  items: PaneMenuItem[]\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n  width: 0,\n}\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {items, itemGroups, onAction} = props\n  const id = useId()\n\n  const groups = useMemo(() => {\n    if (!itemGroups || itemGroups.length === 0) {\n      return [{id: '$default', items}]\n    }\n\n    const defaultGroup: MenuItemGroup = {id: '$default', items: []}\n\n    const groupMap = itemGroups.reduce((acc: Record<string, MenuItemGroup>, group) => {\n      acc[group.id] = {id: group.id, title: group.title, items: []}\n      return acc\n    }, {})\n\n    for (const item of items) {\n      const group = groupMap[item.group || '$default'] || defaultGroup\n\n      group.items.push(item)\n    }\n\n    return Object.values(groupMap)\n      .concat([defaultGroup])\n      .filter((g) => g.items.length > 0)\n  }, [items, itemGroups])\n\n  return (\n    <MenuButton\n      button={<Button icon={EllipsisVerticalIcon} mode=\"bleed\" padding={3} title=\"Show menu\" />}\n      id={id}\n      menu={\n        <Menu>\n          {groups.map((group, groupIndex) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <Fragment key={groupIndex}>\n              {groupIndex > 0 && <MenuDivider />}\n              {group.title && (\n                <Box paddingX={3} paddingTop={3} paddingBottom={2}>\n                  <Label muted>{group.title}</Label>\n                </Box>\n              )}\n              {group.items.map((item, itemIndex) => (\n                <PaneContextMenuItem\n                  item={item}\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={`${itemIndex}-${item.title}`}\n                  onAction={onAction}\n                />\n              ))}\n            </Fragment>\n          ))}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n\nfunction PaneContextMenuItem(props: {\n  item: PaneMenuItem\n  onAction: (action: PaneMenuItem) => void\n}) {\n  const {item, onAction} = props\n\n  const handleClick = useCallback(() => {\n    onAction(item)\n  }, [item, onAction])\n\n  const hotkeys = useMemo(() => {\n    if (!item.shortcut) return undefined\n\n    return item.shortcut.split('+')\n  }, [item])\n\n  const IntentButtonOrActionButton = forwardRef((linkProps, linkRef: React.ForwardedRef<never>) =>\n    item.intent ? (\n      <IntentLink\n        {...linkProps}\n        intent={item.intent.type}\n        params={item.intent.params}\n        ref={linkRef}\n      />\n    ) : (\n      <button type=\"button\" {...linkProps} />\n    )\n  )\n\n  IntentButtonOrActionButton.displayName = 'Link'\n\n  return (\n    <MenuItem\n      as={IntentButtonOrActionButton}\n      data-as={item.intent ? 'a' : 'button'}\n      hotkeys={hotkeys}\n      icon={item.icon}\n      onClick={handleClick}\n      text={item.title}\n    />\n  )\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {createContext} from 'react'\nimport {PaneContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneContext = createContext<PaneContextValue | null>(null)\n","import {createContext} from 'react'\nimport {PaneLayoutContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneLayoutContext = createContext<PaneLayoutContextValue | null>(null)\n","import {useContext} from 'react'\nimport {PaneLayoutContext} from './PaneLayoutContext'\nimport {PaneLayoutContextValue} from './types'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import {Layer} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport styled from 'styled-components'\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize]\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {BoundaryElementProvider, Card, CardProps, Code, Flex, useForwardedRef} from '@sanity/ui'\nimport React, {forwardRef, useMemo, useState, useCallback, useEffect} from 'react'\nimport styled from 'styled-components'\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneContext} from './PaneContext'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneProps {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\n// eslint-disable-next-line complexity\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const forwardedRef = useForwardedRef(ref)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  const setRef = useCallback(\n    (refValue: HTMLDivElement | null) => {\n      setRootElement(refValue)\n      forwardedRef.current = refValue\n    },\n    [forwardedRef]\n  )\n\n  useEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement]\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement]\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth]\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <Root\n            data-testid=\"pane\"\n            tone=\"inherit\"\n            hidden={hidden}\n            id={id}\n            overflow={layoutCollapsed ? undefined : 'hidden'}\n            {...restProps}\n            data-pane-collapsed={collapsed ? '' : undefined}\n            data-pane-index={paneIndex}\n            data-pane-selected={selected ? '' : undefined}\n            ref={setRef}\n            style={style}\n          >\n            {PANE_DEBUG && (\n              <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                <Code size={1}>\n                  {[\n                    `#${paneIndex}`,\n                    `collapsed=${collapsed}`,\n                    `currentMinWidth=${currentMinWidth}`,\n                    `currentMaxWidth=${currentMaxWidth}`,\n                    `flex=${flex}`,\n                    `minWidth=${minWidth}`,\n                    `maxWidth=${maxWidth}`,\n                  ].join('\\n')}\n                </Code>\n              </Card>\n            )}\n\n            <BoundaryElementProvider element={rootElement}>\n              {!hidden && (\n                <Flex direction=\"column\" height=\"fill\">\n                  {children}\n                </Flex>\n              )}\n            </BoundaryElementProvider>\n          </Root>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {useContext} from 'react'\nimport {PaneContext} from './PaneContext'\nimport {PaneContextValue} from './types'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {BoxOverflow} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\nimport {Root} from './PaneContent.styles'\n\ninterface PaneContentProps {\n  as?: React.ElementType | keyof JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","import {Card, Layer} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: -1px;\n    border-bottom: 1px solid var(--card-shadow-outline-color);\n  }\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneFooterProps {\n  children?: React.ReactNode\n  padding?: number | number[]\n}\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Box, Flex, Layer, rgba, TextSkeleton, Text, Theme} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  line-height: 0;\n  position: sticky;\n  top: 0;\n\n  &:not([data-collapsed]):after {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -1px;\n    border-bottom: 1px solid var(--card-shadow-outline-color);\n  }\n`\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleBox = styled(Box)``\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n\nconst TABS_SCROLL_PADDING = 100\n\nexport const TabsBox = styled(Box)(({theme}: {theme: Theme}) => {\n  const {color, space} = theme.sanity\n\n  return css`\n    margin: -${space[2]}px 0 -${space[2]}px -${space[3]}px;\n    overflow: hidden;\n    position: relative;\n\n    & > div {\n      white-space: nowrap;\n      padding: ${space[2]}px 0 calc(${TABS_SCROLL_PADDING}px + ${space[2]}px) ${space[3]}px;\n      margin-bottom: ${0 - TABS_SCROLL_PADDING}px;\n      overflow: auto;\n\n      /* right padding */\n      & > div:after {\n        content: '';\n        display: inline-block;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        width: ${space[3]}px;\n        height: 1px;\n      }\n    }\n\n    /* Gradient that makes it look like tabs disappear into nothing (looks nicer) */\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      background: linear-gradient(to right, ${rgba(color.base.bg, 0)}, var(--card-bg-color));\n      width: ${space[3]}px;\n      pointer-events: none;\n    }\n  `\n})\n","import {useElementRect, Box, Card, Flex, LayerProvider} from '@sanity/ui'\nimport React, {useMemo, useCallback, forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {Layout, Root, TabsBox, TitleBox, TitleTextSkeleton, TitleText} from './PaneHeader.styles'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneHeaderProps {\n  actions?: React.ReactNode\n  backButton?: React.ReactNode\n  loading?: boolean\n  subActions?: React.ReactNode\n  tabs?: React.ReactNode\n  title: React.ReactNode\n}\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {actions, backButton, loading, subActions, tabs, title} = props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect]\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root data-collapsed={collapsed ? '' : undefined} data-testid=\"pane-header\" ref={ref}>\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout\n              onClick={handleLayoutClick}\n              padding={2}\n              paddingBottom={tabs || subActions ? 0 : 2}\n              sizing=\"border\"\n              style={layoutStyle}\n            >\n              {backButton}\n\n              <TitleBox\n                flex={1}\n                onClick={handleTitleClick}\n                paddingY={3}\n                paddingLeft={backButton ? 1 : 3}\n              >\n                {loading && <TitleTextSkeleton animated radius={1} />}\n                {!loading && (\n                  <TitleText tabIndex={0} textOverflow=\"ellipsis\" weight=\"semibold\">\n                    {title}\n                  </TitleText>\n                )}\n              </TitleBox>\n\n              {actions && (\n                <Box hidden={collapsed} paddingLeft={1}>\n                  <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                </Box>\n              )}\n            </Layout>\n\n            {(tabs || subActions) && (\n              <Flex\n                align=\"center\"\n                hidden={collapsed}\n                paddingTop={1}\n                paddingRight={2}\n                paddingBottom={2}\n                paddingLeft={3}\n                overflow=\"auto\"\n              >\n                <TabsBox flex={1} marginRight={subActions ? 3 : 0}>\n                  <div>{tabs}</div>\n                </TabsBox>\n\n                {subActions && <Box>{subActions}</Box>}\n              </Flex>\n            )}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","import {Button} from '@sanity/ui'\nimport React, {forwardRef, useMemo} from 'react'\nimport {PaneMenuItem} from '../types'\nimport {IntentLink} from 'sanity/router'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {intent: RouterIntent} & Omit<React.ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: React.ReactNode},\n        linkRef: React.ForwardedRef<HTMLAnchorElement>\n      ) {\n        return (\n          <IntentLink {...linkProps} intent={intent.type} params={intent.params} ref={linkRef} />\n        )\n      }),\n    [intent]\n  )\n\n  return props.disabled ? (\n    <Button {...props} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button\n      {...restProps}\n      as={Link}\n      data-as=\"a\"\n      ref={ref as React.ForwardedRef<HTMLButtonElement>}\n    />\n  )\n})\n","import {Tooltip, Text, Box} from '@sanity/ui'\nimport React from 'react'\nimport {useCurrentUser, InsufficientPermissionsMessage} from 'sanity'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  loading: boolean\n  children: React.ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          <Box padding={2}>\n            <Text>Loading…</Text>\n          </Box>\n        ) : (\n          <InsufficientPermissionsMessage currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {ComposeIcon} from '@sanity/icons'\nimport React, {useMemo, forwardRef} from 'react'\nimport {Box, Button, Label, Menu, MenuButton, MenuItem, PopoverProps} from '@sanity/ui'\nimport {Schema} from '@sanity/types'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\nimport {IntentLink} from 'sanity/router'\nimport {\n  useTemplatePermissions,\n  TemplatePermissionsResult,\n  Template,\n  InitialValueTemplateItem,\n  useSchema,\n  useTemplates,\n} from 'sanity'\n\nexport type PaneHeaderIntentProps = React.ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  schema: Schema,\n  templates: Template[],\n  item: InitialValueTemplateItem\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const schema = useSchema()\n  const templates = useTemplates()\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {}\n    )\n  }, [templatePermissions])\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip reveal loading={isTemplatePermissionsLoading}>\n        <Button\n          aria-label=\"Insufficient permissions\"\n          icon={ComposeIcon}\n          mode=\"bleed\"\n          disabled\n          data-testid=\"action-intent-button\"\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(schema, templates, firstItem)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n      >\n        <IntentButton\n          aria-label={firstItem.title}\n          icon={firstItem.icon || ComposeIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={ComposeIcon}\n          mode=\"bleed\"\n          padding={3}\n          data-testid=\"multi-action-intent-button\"\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          <Box paddingX={3} paddingTop={3} paddingBottom={2}>\n            <Label muted>Create</Label>\n          </Box>\n\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(schema, templates, item)\n            const template = templates.find((t) => t.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: React.ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  ref={linkRef}\n                />\n              )\n            )\n\n            Link.displayName = 'Link'\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                key={item.id}\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={item.title || template.title}\n                  aria-label={disabled ? 'Insufficient permissions' : item.title || template.title}\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {UnknownIcon} from '@sanity/icons'\nimport {Box, Button, Inline, Text, Tooltip} from '@sanity/ui'\nimport {partition, uniqBy} from 'lodash'\nimport React, {memo, useCallback, useMemo} from 'react'\nimport {DeskToolPaneActionHandler, PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {IntentButton} from '../IntentButton'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\nimport {useTemplates, InitialValueTemplateItem} from 'sanity'\n\n// to preserve memory references\nconst emptyArray: never[] = []\nconst emptyObject = {}\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, DeskToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(\n  ({\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = emptyArray,\n    menuItems = emptyArray,\n    menuItemGroups = emptyArray,\n    actionHandlers = emptyObject,\n  }: PaneHeaderActionsProps) => {\n    const templates = useTemplates()\n\n    const handleAction = useCallback(\n      (item: PaneMenuItem) => {\n        if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n          console.warn('No handler for action:', item.action)\n          return false\n        }\n\n        const handler =\n          // eslint-disable-next-line no-nested-ternary\n          typeof item.action === 'function'\n            ? item.action\n            : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n        if (handler) {\n          handler(item.params as Record<string, string>)\n          return true\n        }\n\n        return false\n      },\n      [actionHandlers]\n    )\n\n    const [actionMenuItems, contextMenuItems] = useMemo(() => {\n      const nonCreateMenuItem = menuItems\n        // remove items with `create` intents because those will get combined\n        // into one action button later\n        .filter((item) => item.intent?.type !== 'create')\n\n      return partition(nonCreateMenuItem, (item) => item.showAsAction)\n    }, [menuItems])\n\n    const initialValueTemplateItemFromMenuItems = useMemo(() => {\n      return menuItems\n        .map((item, menuItemIndex) => {\n          if (item.intent?.type !== 'create') return null\n\n          const {params} = item.intent\n          if (!params) return null\n\n          const intentParams = Array.isArray(params) ? params[0] : params\n          const templateParams = Array.isArray(params) ? params[1] : undefined\n\n          // fallback to the schema type name as the template ID.\n          // by default, the initial template values are populated from every\n          // document type in the schema\n          const templateId = intentParams.template || intentParams.type\n          if (!templateId) return null\n\n          // eslint-disable-next-line max-nested-callbacks\n          const template = templates.find((t) => t.id === templateId)\n          // the template doesn't exist then the action might be disabled\n          if (!template) return null\n\n          const initialDocumentId = intentParams.id\n\n          return {\n            item,\n            template,\n            templateParams,\n            menuItemIndex,\n            initialDocumentId,\n          }\n        })\n        .filter(isNonNullable)\n        .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n          const initialValueTemplateItem: InitialValueTemplateItem = {\n            id: `menuItem${menuItemIndex}`,\n            initialDocumentId,\n            templateId: template.id,\n            type: 'initialValueTemplateItem',\n            title: item.title || template.title,\n            icon: item.icon as InitialValueTemplateItem['icon'],\n            description: template.description,\n            parameters: templateParams,\n            schemaType: template.schemaType,\n          }\n\n          return initialValueTemplateItem\n        })\n    }, [menuItems, templates])\n\n    const combinedInitialValueTemplates = useMemo(() => {\n      // this de-dupes create actions\n      return uniqBy(\n        [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n        (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters])\n      )\n    }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n    return (\n      <Inline space={1}>\n        {[\n          Boolean(combinedInitialValueTemplates.length) && (\n            <PaneHeaderCreateButton\n              key=\"$CreateMenuButton\"\n              templateItems={combinedInitialValueTemplates}\n            />\n          ),\n          //\n          ...actionMenuItems.map((actionItem, actionIndex) => {\n            return (\n              <Tooltip\n                content={\n                  <Box padding={2}>\n                    <Text size={1}>{actionItem.title}</Text>\n                  </Box>\n                }\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${actionIndex}-${actionItem.title}`}\n                placement=\"bottom\"\n              >\n                {actionItem.intent ? (\n                  <IntentButton\n                    intent={actionItem.intent}\n                    aria-label={actionItem.title}\n                    icon={actionItem.icon || UnknownIcon}\n                    mode=\"bleed\"\n                  />\n                ) : (\n                  <Button\n                    aria-label={actionItem.title}\n                    icon={actionItem.icon || UnknownIcon}\n                    mode=\"bleed\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => handleAction(actionItem)}\n                  />\n                )}\n              </Tooltip>\n            )\n          }),\n          //\n          Boolean(contextMenuItems.length) && (\n            <PaneContextMenuButton\n              items={contextMenuItems}\n              itemGroups={menuItemGroups}\n              key=\"$ContextMenu\"\n              onAction={handleAction}\n            />\n          ),\n        ]}\n      </Inline>\n    )\n  }\n)\n\nPaneHeaderActions.displayName = 'PaneHeaderActions'\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {TrashIcon} from '@sanity/icons'\nimport React, {useCallback, useState} from 'react'\nimport {ConfirmDeleteDialog} from '../components'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOTHING_TO_DELETE: 'This document doesn’t yet exist or is already deleted',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete}) => {\n  const {delete: deleteOp} = useDocumentOperation(id, type)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: true,\n      label: 'Delete',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"delete this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: TrashIcon,\n    disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n    title:\n      (deleteOp.disabled &&\n        DISABLED_REASON_TITLE[deleteOp.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    label: isDeleting ? 'Deleting…' : 'Delete',\n    shortcut: 'Ctrl+Alt+D',\n    onHandle: handle,\n    dialog: isConfirmDialogOpen && {\n      type: 'dialog',\n      onClose: onComplete,\n      content: (\n        <ConfirmDeleteDialog\n          action=\"delete\"\n          id={draft?._id || id}\n          type={type}\n          onCancel={handleCancel}\n          onConfirm={handleConfirm}\n        />\n      ),\n    },\n  }\n}\n\nDeleteAction.action = 'delete'\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {ResetIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {\n  DocumentActionComponent,\n  DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NO_CHANGES: 'This document has no unpublished changes',\n  NOT_PUBLISHED: 'This document is not published',\n}\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: <>Are you sure you want to discard all changes since last published?</>,\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete]\n  )\n\n  if (!published || liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: true,\n      label: 'Discard changes',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"discard changes in this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: ResetIcon,\n    disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n    title:\n      (discardChanges.disabled &&\n        DISABLED_REASON_TITLE[discardChanges.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    label: 'Discard changes',\n    onHandle: handle,\n    dialog,\n  }\n}\n\nDiscardChangesAction.action = 'discardChanges'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport React, {useCallback, useState} from 'react'\nimport {useRouter} from 'sanity/router'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useDocumentPairPermissions,\n  useDocumentOperation,\n  useCurrentUser,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOTHING_TO_DUPLICATE: 'This document doesn’t yet exist so there‘s nothing to duplicate',\n}\n\n/** @internal */\nexport const DuplicateAction: DocumentActionComponent = ({id, type, onComplete}) => {\n  const {duplicate} = useDocumentOperation(id, type)\n  const router = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'duplicate',\n  })\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(() => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n    ;(duplicate.execute as any)(dupeId)\n    router.navigateIntent('edit', {id: dupeId, type})\n    onComplete()\n  }, [duplicate, onComplete, router, type])\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      icon: CopyIcon,\n      disabled: true,\n      label: 'Duplicate',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"duplicate this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    icon: CopyIcon,\n    disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n    label: isDuplicating ? 'Duplicating…' : 'Duplicate',\n    title:\n      (duplicate.disabled &&\n        DISABLED_REASON_TITLE[duplicate.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    onHandle: handle,\n  }\n}\n\nDuplicateAction.action = 'duplicate'\n","import {RestoreIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {DocumentActionComponent, DocumentActionDialogProps, useDocumentOperation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({id, type, revision, onComplete}) => {\n  const {restore}: any = useDocumentOperation(id, type)\n  const router = useRouter()\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision)\n    router.navigateIntent('edit', {id, type})\n    onComplete()\n  }, [revision, restore, router, onComplete, id, type])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: <>Are you sure you want to restore this document?</>,\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete])\n\n  const isRevisionInitialVersion = revision === '@initial'\n  const isRevisionLatestVersion = revision === undefined // undefined means latest version\n\n  if (isRevisionLatestVersion) {\n    return null\n  }\n\n  return {\n    label: 'Restore',\n    color: 'primary',\n    onHandle: handle,\n    title: isRevisionInitialVersion\n      ? \"You can't restore to the initial version\"\n      : 'Restore to this version',\n    icon: RestoreIcon,\n    dialog,\n    disabled: isRevisionInitialVersion,\n  }\n}\n\nHistoryRestoreAction.action = 'restore'\n","import {\n  ValidationMarker,\n  Path,\n  SanityDocument,\n  ObjectSchemaType,\n  SanityDocumentLike,\n} from '@sanity/types'\nimport {createContext} from 'react'\nimport {View} from '../../structureBuilder'\nimport {PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {TimelineMode} from './types'\nimport {\n  DocumentActionComponent,\n  DocumentBadgeComponent,\n  DocumentFormNode,\n  DocumentLanguageFilterComponent,\n  DocumentPermission,\n  EditStateFor,\n  PatchEvent,\n  PermissionCheckResult,\n  StateTree,\n  Timeline,\n  TimelineController,\n} from 'sanity'\n\n/** @internal */\nexport interface DocumentPaneContextValue {\n  actions: DocumentActionComponent[] | null\n  activeViewId: string | null\n  badges: DocumentBadgeComponent[] | null\n  changesOpen: boolean\n  collapsedFieldSets: StateTree<boolean> | undefined\n  collapsedPaths: StateTree<boolean> | undefined\n  compareValue: Partial<SanityDocument> | null\n  connectionState: 'connecting' | 'reconnecting' | 'connected'\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  documentIdRaw: string\n  documentType: string\n  editState: EditStateFor | null\n  focusPath: Path\n  // TODO: rename this for consistency\n  historyController: TimelineController\n  index: number\n  inspectOpen: boolean\n  menuItemGroups: PaneMenuItemGroup[]\n  menuItems: PaneMenuItem[]\n  onBlur: (blurredPath: Path) => void\n  onChange: (event: PatchEvent) => void\n  onFocus: (pathOrEvent: Path) => void\n  onHistoryClose: () => void\n  onHistoryOpen: () => void\n  onInspectClose: () => void\n  onKeyUp: (event: React.KeyboardEvent<HTMLDivElement>) => void\n  onMenuAction: (item: PaneMenuItem) => void\n  onPaneClose: () => void\n  onPaneSplit?: () => void\n  onPathOpen: (path: Path) => void\n  onSetActiveFieldGroup: (path: Path, groupName: string) => void\n  onSetCollapsedPath: (path: Path, expanded: boolean) => void\n  onSetCollapsedFieldSet: (path: Path, expanded: boolean) => void\n  paneKey: string\n  previewUrl?: string | null\n  ready: boolean\n  schemaType: ObjectSchemaType\n  setTimelineMode: (mode: TimelineMode) => void\n  setTimelineRange(since: string | null, rev: string | null): void\n  source?: string\n  timeline: Timeline\n  timelineMode: TimelineMode\n  title: string | null\n  validation: ValidationMarker[]\n  value: SanityDocumentLike\n  views: View[]\n  formState: DocumentFormNode | null\n  permissions?: PermissionCheckResult | null\n  isPermissionsLoading: boolean\n  unstable_languageFilter: DocumentLanguageFilterComponent[]\n}\n\n/** @internal */\nexport const DocumentPaneContext = createContext<DocumentPaneContextValue | null>(null)\n","import {useContext} from 'react'\nimport {DocumentPaneContext, DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {CheckmarkIcon, PublishIcon} from '@sanity/icons'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport React, {useCallback, useEffect, useState} from 'react'\nimport {TimeAgo} from '../components'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useSyncState,\n  useValidationStatus,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  LIVE_EDIT_ENABLED: 'Cannot publish since liveEdit is enabled for this document type',\n  ALREADY_PUBLISHED: 'Already published',\n  NO_CHANGES: 'No unpublished changes',\n  NOT_READY: 'Operation not ready',\n}\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE,\n  publishedAt: string | undefined\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return (\n      <>\n        <span>\n          Published <TimeAgo time={publishedAt} />\n        </span>\n      </>\n    )\n  }\n  return DISABLED_REASON_TITLE[reason]\n}\n\n/** @internal */\n// eslint-disable-next-line complexity\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published} = props\n  const [publishState, setPublishState] = useState<'publishing' | 'published' | null>(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, onHistoryOpen, documentId, documentType} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  // eslint-disable-next-line no-nested-ternary\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt) || ''\n    : hasValidationErrors\n    ? 'There are validation errors that need to be fixed before this document can be published'\n    : ''\n\n  const hasDraft = Boolean(draft)\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState('publishing')\n  }, [publish])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish = publishState === 'publishing' && !hasDraft\n    if (didPublish) {\n      if (changesOpen) {\n        // Re-open the panel\n        onHistoryOpen()\n      }\n    }\n    const nextState = didPublish ? 'published' : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, hasDraft, onHistoryOpen])\n\n  const handle = useCallback(() => {\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  if (liveEdit) {\n    return {\n      tone: 'positive',\n      label: 'Publish',\n      title:\n        'Live Edit is enabled for this content type and publishing happens automatically as you make changes',\n      disabled: true,\n    }\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'positive',\n      label: 'Publish',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"publish this document\"\n          currentUser={currentUser}\n        />\n      ),\n      disabled: true,\n    }\n  }\n\n  const disabled = Boolean(\n    publishScheduled ||\n      editState?.transactionSyncLock?.enabled ||\n      publishState === 'publishing' ||\n      publishState === 'published' ||\n      hasValidationErrors ||\n      publish.disabled\n  )\n\n  return {\n    disabled: disabled || isPermissionsLoading,\n    tone: 'positive',\n    label:\n      // eslint-disable-next-line no-nested-ternary\n      publishState === 'published'\n        ? 'Published'\n        : publishScheduled || publishState === 'publishing'\n        ? 'Publishing…'\n        : 'Publish',\n    // @todo: Implement loading state, to show a `<Button loading />` state\n    // loading: publishScheduled || publishState === 'publishing',\n    icon: publishState === 'published' ? CheckmarkIcon : PublishIcon,\n    // eslint-disable-next-line no-nested-ternary\n    title: publishScheduled\n      ? 'Waiting for tasks to finish before publishing'\n      : publishState === 'published' || publishState === 'publishing'\n      ? null\n      : title,\n    shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n    onHandle: handle,\n  }\n}\n\nPublishAction.action = 'publish'\n","import {UnpublishIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {ConfirmDeleteDialog} from '../components'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useDocumentPairPermissions,\n  useCurrentUser,\n  useDocumentOperation,\n  DocumentActionModalDialogProps,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOT_PUBLISHED: 'This document is not published',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  if (liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      label: 'Unpublish',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"unpublish this document\"\n          currentUser={currentUser}\n        />\n      ),\n      disabled: true,\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: UnpublishIcon,\n    disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n    label: 'Unpublish',\n    title: unpublish.disabled\n      ? DISABLED_REASON_TITLE[unpublish.disabled as keyof typeof DISABLED_REASON_TITLE]\n      : '',\n    onHandle: () => setConfirmDialogOpen(true),\n    dialog,\n  }\n}\n\nUnpublishAction.action = 'unpublish'\n","import {DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEdit} = props\n\n  if (liveEdit) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = {}\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n","import {uuid} from '@sanity/uuid'\nimport {PaneNode, RouterPanes} from './types'\nimport {EMPTY_PARAMS, LOADING_PANE} from './constants'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n  const isTemplate = intent === 'create' && params.template\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = isTemplate ? {template: params.template} : EMPTY_PARAMS\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n","import {omit} from 'lodash'\nimport {RouterPanes, RouterPaneGroup, RouterPaneSibling} from './types'\nimport {route} from 'sanity/router'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayload = (str: string) =>\n  /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n  ? never\n  : T extends 0\n  ? never\n  : T extends 0n\n  ? never\n  : T extends null | undefined\n  ? NonNullable<T>\n  : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  return chunks.reduce(\n    (pane, chunk) => {\n      if (isParam(chunk)) {\n        const key = chunk.slice(0, chunk.indexOf('='))\n        const value = chunk.slice(key.length + 1)\n        pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n      } else if (isPayload(chunk)) {\n        pane.payload = tryParseBase64Payload(chunk)\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unknown pane segment: %s - skipping', chunk)\n      }\n\n      return pane\n    },\n    {...initial, params: EMPTY_PARAMS, payload: undefined}\n  )\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload = typeof payload === 'undefined' ? undefined : btoa(JSON.stringify(payload))\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string) {\n  return data ? tryParsePayload(atob(data)) : undefined\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {router} from './router'\nimport {DeskToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\n/** @beta */\nexport const deskTool = definePlugin<DeskToolOptions | void>((options) => ({\n  name: '@sanity/desk-tool',\n  document: {\n    actions: (prevActions) => {\n      // NOTE: since it's possible to have several desk tools in one Studio,\n      // we need to check whether the document actions already exist in the Studio config\n      const actions = prevActions.slice(0)\n      for (const action of documentActions) {\n        if (!actions.includes(action)) actions.push(action)\n      }\n      return actions\n    },\n    badges: (prevBadges) => {\n      // NOTE: since it's possible to have several desk tools in one Studio,\n      // we need to check whether the document badges already exist in the Studio config\n      const badges = prevBadges.slice(0)\n      for (const badge of documentBadges) {\n        if (!badges.includes(badge)) badges.push(badge)\n      }\n      return badges\n    },\n  },\n  tools: [\n    {\n      name: options?.name || 'desk',\n      title: options?.title || 'Desk',\n      icon: options?.icon || MasterDetailIcon,\n      component: lazy(() => import('./components/deskTool')),\n      canHandleIntent: (intent, params) => {\n        return Boolean(\n          (intent === 'edit' && params.id) ||\n            (intent === 'create' && params.type) ||\n            (intent === 'create' && params.template)\n        )\n      },\n      getIntentState,\n      options,\n      router,\n    },\n  ],\n}))\n","import {createContext} from 'react'\nimport {DeskToolContextValue} from './types'\n\nexport const DeskToolContext = createContext<DeskToolContextValue | null>(null)\n","import {SerializePath} from './StructureNodes'\n\n/** @internal */\nexport class SerializeError extends Error {\n  public readonly path: SerializePath\n  public helpId?: HELP_URL\n\n  constructor(\n    message: string,\n    parentPath: SerializePath,\n    pathSegment: string | number | undefined,\n    hint?: string\n  ) {\n    super(message)\n    const segment = typeof pathSegment === 'undefined' ? '<unknown>' : `${pathSegment}`\n    this.path = (parentPath || []).concat(hint ? `${segment} (${hint})` : segment)\n  }\n\n  withHelpUrl(id: HELP_URL): SerializeError {\n    this.helpId = id\n    return this\n  }\n}\n\n/** @internal */\nexport enum HELP_URL {\n  ID_REQUIRED = 'structure-node-id-required',\n  TITLE_REQUIRED = 'structure-title-required',\n  FILTER_REQUIRED = 'structure-filter-required',\n  INVALID_LIST_ITEM = 'structure-invalid-list-item',\n  COMPONENT_REQUIRED = 'structure-view-component-required',\n  DOCUMENT_ID_REQUIRED = 'structure-document-id-required',\n  DOCUMENT_TYPE_REQUIRED = 'structure-document-type-required',\n  SCHEMA_TYPE_REQUIRED = 'structure-schema-type-required',\n  SCHEMA_TYPE_NOT_FOUND = 'structure-schema-type-not-found',\n  LIST_ITEMS_MUST_BE_ARRAY = 'structure-list-items-must-be-array',\n  QUERY_PROVIDED_FOR_FILTER = 'structure-query-provided-for-filter',\n  ACTION_OR_INTENT_REQUIRED = 'structure-action-or-intent-required',\n  LIST_ITEM_IDS_MUST_BE_UNIQUE = 'structure-list-item-ids-must-be-unique',\n  ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE = 'structure-action-and-intent-mutually-exclusive',\n}\n","import {SchemaType, SortOrderingItem} from '@sanity/types'\n\nconst IMPLICIT_FIELDS = ['_id', '_type', '_createdAt', '_updatedAt', '_rev']\n\n// Takes a path array and a schema type and builds a GROQ join every time it enters a reference field\nfunction joinReferences(schemaType: SchemaType, path: string[]): string {\n  const [head, ...tail] = path\n\n  if (!('fields' in schemaType)) {\n    return ''\n  }\n\n  const schemaField = schemaType.fields.find((field) => field.name === head)\n  if (!schemaField) {\n    if (!IMPLICIT_FIELDS.includes(head)) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'The current ordering config targeted the nonexistent field \"%s\" on schema type \"%s\". It should be one of %o',\n        head,\n        schemaType.name,\n        schemaType.fields.map((field) => field.name)\n      )\n    }\n    return ''\n  }\n\n  if ('to' in schemaField.type && schemaField.type.name === 'reference') {\n    const refTypes = schemaField.type.to\n    return `${head}->{${refTypes.map((refType) => joinReferences(refType, tail)).join(',')}}`\n  }\n\n  const tailFields = tail.length > 0 && joinReferences(schemaField.type, tail)\n  const tailWrapper = tailFields ? `{${tailFields}}` : ''\n  return tail.length > 0 ? `${head}${tailWrapper}` : head\n}\n\nexport function getExtendedProjection(schemaType: SchemaType, orderBy: SortOrderingItem[]): string {\n  return orderBy.map((ordering) => joinReferences(schemaType, ordering.field.split('.'))).join(', ')\n}\n","import {SortOrdering} from '@sanity/types'\n\nexport const ORDER_BY_UPDATED_AT: SortOrdering = {\n  title: 'Last edited',\n  name: 'lastEditedDesc',\n  by: [{field: '_updatedAt', direction: 'desc'}],\n}\n\nexport const ORDER_BY_CREATED_AT: SortOrdering = {\n  title: 'Created',\n  name: 'lastCreatedDesc',\n  by: [{field: '_createdAt', direction: 'desc'}],\n}\n\nexport const DEFAULT_SELECTED_ORDERING_OPTION = ORDER_BY_UPDATED_AT\n\nexport const DEFAULT_ORDERING_OPTIONS: SortOrdering[] = [\n  ORDER_BY_UPDATED_AT, // _updatedAt\n  ORDER_BY_CREATED_AT, // _createdAt\n]\n","import {SchemaType, SortOrdering, SortOrderingItem} from '@sanity/types'\nimport {SortIcon} from '@sanity/icons'\nimport {getExtendedProjection} from './util/getExtendedProjection'\nimport {Intent} from './Intent'\nimport {DEFAULT_ORDERING_OPTIONS} from './Sort'\nimport {SerializeOptions, Serializable, SerializePath} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItem(\n  item: MenuItem | MenuItemBuilder,\n  index: number,\n  path: SerializePath\n): MenuItem {\n  return item instanceof MenuItemBuilder ? item.serialize({path, index}) : item\n}\n\n/** @beta */\nexport type MenuItemActionType =\n  | string\n  | ((params: Record<string, string> | undefined, scope?: any) => void)\n\n/** @beta */\nexport type MenuItemParamsType = Record<string, string | unknown | undefined>\n\n/** @beta */\nexport interface MenuItem {\n  title: string\n  action?: MenuItemActionType\n  intent?: Intent\n  group?: string\n  // TODO: align these with TemplateResponse['icon']\n  icon?: React.ComponentType | React.ReactNode\n  params?: MenuItemParamsType\n  showAsAction?: boolean\n}\n\n/** @beta */\nexport type PartialMenuItem = Partial<MenuItem>\n\n/** @beta */\nexport class MenuItemBuilder implements Serializable<MenuItem> {\n  protected spec: PartialMenuItem\n\n  constructor(protected _context: StructureContext, spec?: MenuItem) {\n    this.spec = spec ? spec : {}\n  }\n\n  action(action: MenuItemActionType): MenuItemBuilder {\n    return this.clone({action})\n  }\n\n  getAction(): PartialMenuItem['action'] {\n    return this.spec.action\n  }\n\n  intent(intent: Intent): MenuItemBuilder {\n    return this.clone({intent})\n  }\n\n  getIntent(): PartialMenuItem['intent'] {\n    return this.spec.intent\n  }\n\n  title(title: string): MenuItemBuilder {\n    return this.clone({title})\n  }\n\n  getTitle(): string | undefined {\n    return this.spec.title\n  }\n\n  group(group: string): MenuItemBuilder {\n    return this.clone({group})\n  }\n\n  getGroup(): PartialMenuItem['group'] {\n    return this.spec.group\n  }\n\n  icon(icon: React.ComponentType | React.ReactNode): MenuItemBuilder {\n    return this.clone({icon})\n  }\n\n  getIcon(): PartialMenuItem['icon'] {\n    return this.spec.icon\n  }\n\n  params(params: MenuItemParamsType): MenuItemBuilder {\n    return this.clone({params})\n  }\n\n  getParams(): PartialMenuItem['params'] {\n    return this.spec.params\n  }\n\n  showAsAction(showAsAction = true): MenuItemBuilder {\n    return this.clone({showAsAction: Boolean(showAsAction)})\n  }\n\n  getShowAsAction(): PartialMenuItem['showAsAction'] {\n    return this.spec.showAsAction\n  }\n\n  serialize(options: SerializeOptions = {path: []}): MenuItem {\n    const {title, action, intent} = this.spec\n    if (!title) {\n      const hint = typeof action === 'string' ? `action: \"${action}\"` : undefined\n      throw new SerializeError(\n        '`title` is required for menu item',\n        options.path,\n        options.index,\n        hint\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    if (!action && !intent) {\n      throw new SerializeError(\n        `\\`action\\` or \\`intent\\` required for menu item with title ${this.spec.title}`,\n        options.path,\n        options.index,\n        `\"${title}\"`\n      ).withHelpUrl(HELP_URL.ACTION_OR_INTENT_REQUIRED)\n    }\n\n    if (intent && action) {\n      throw new SerializeError(\n        'cannot set both `action` AND `intent`',\n        options.path,\n        options.index,\n        `\"${title}\"`\n      ).withHelpUrl(HELP_URL.ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE)\n    }\n\n    return {...this.spec, title}\n  }\n\n  clone(withSpec?: PartialMenuItem): MenuItemBuilder {\n    const builder = new MenuItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport interface SortMenuItem extends MenuItem {\n  params: {\n    by: SortOrderingItem[]\n  }\n}\n\n/** @internal */\nexport function getOrderingMenuItem(\n  context: StructureContext,\n  ordering: SortOrdering,\n  extendedProjection?: string\n): MenuItemBuilder {\n  return new MenuItemBuilder(context)\n    .group('sorting')\n    .title(`Sort by ${ordering.title}`)\n    .icon(SortIcon)\n    .action('setSortOrder')\n    .params({by: ordering.by, extendedProjection})\n}\n\n/** @internal */\nexport function getOrderingMenuItemsForSchemaType(\n  context: StructureContext,\n  typeName: SchemaType | string\n): MenuItemBuilder[] {\n  const {schema} = context\n  const type = typeof typeName === 'string' ? schema.get(typeName) : typeName\n  if (!type || !('orderings' in type)) {\n    return []\n  }\n\n  return (\n    type.orderings ? type.orderings.concat(DEFAULT_ORDERING_OPTIONS) : DEFAULT_ORDERING_OPTIONS\n  ).map((ordering: SortOrdering) =>\n    getOrderingMenuItem(context, ordering, getExtendedProjection(type, ordering.by))\n  )\n}\n","import {SerializeOptions, Serializable, SerializePath} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItemGroup(\n  item: MenuItemGroup | MenuItemGroupBuilder,\n  index: number,\n  path: SerializePath\n): MenuItemGroup {\n  return item instanceof MenuItemGroupBuilder ? item.serialize({path, index}) : item\n}\n\n/** @beta */\nexport interface MenuItemGroup {\n  id: string\n  title: string\n}\n\n/** @beta */\nexport class MenuItemGroupBuilder implements Serializable<MenuItemGroup> {\n  protected _id: string\n  protected _title: string\n\n  constructor(protected _context: StructureContext, spec?: MenuItemGroup) {\n    this._id = spec ? spec.id : ''\n    this._title = spec ? spec.title : ''\n  }\n\n  id(id: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id, title: this._title})\n  }\n\n  getId(): string {\n    return this._id\n  }\n\n  title(title: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id: this._id, title})\n  }\n\n  getTitle(): string {\n    return this._title\n  }\n\n  serialize(options: SerializeOptions = {path: []}): MenuItemGroup {\n    const {_id, _title} = this\n    if (!_id) {\n      throw new SerializeError(\n        '`id` is required for a menu item group',\n        options.path,\n        options.index,\n        _title\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!_title) {\n      throw new SerializeError(\n        '`title` is required for a menu item group',\n        options.path,\n        _id\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: _id,\n      title: _title,\n    }\n  }\n}\n","import {SerializeError} from '../SerializeError'\nimport {SerializePath} from '../StructureNodes'\n\nconst disallowedPattern = /([^A-Za-z0-9-_.])/\n\nexport function validateId(\n  id: string,\n  parentPath: SerializePath,\n  pathSegment: string | number | undefined\n): string {\n  if (typeof id !== 'string') {\n    throw new SerializeError(\n      `Structure node id must be of type string, got ${typeof id}`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  const [disallowedChar] = id.match(disallowedPattern) || []\n  if (disallowedChar) {\n    throw new SerializeError(\n      `Structure node id cannot contain character \"${disallowedChar}\"`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  if (id.startsWith('__edit__')) {\n    throw new SerializeError(\n      `Structure node id cannot start with __edit__`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  return id\n}\n","import {camelCase} from 'lodash'\nimport {SerializeOptions, StructureNode, Serializable, Child} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {MenuItem, MenuItemBuilder, maybeSerializeMenuItem} from './MenuItem'\nimport {MenuItemGroup, MenuItemGroupBuilder, maybeSerializeMenuItemGroup} from './MenuItemGroup'\nimport {validateId} from './util/validateId'\nimport {UserComponent} from './types'\n\n/** @beta */\n// TODO: rename to `StructureComponent` since it clashes with React?\nexport interface Component extends StructureNode {\n  component: UserComponent\n  child?: Child\n  menuItems: MenuItem[]\n  menuItemGroups: MenuItemGroup[]\n  options: {[key: string]: unknown}\n}\n\n/** @beta */\nexport interface ComponentInput extends StructureNode {\n  component: UserComponent\n  child?: Child\n  options?: {[key: string]: unknown}\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/** @beta */\nexport interface BuildableComponent extends Partial<StructureNode> {\n  component?: UserComponent\n  child?: Child\n  options?: {[key: string]: unknown}\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/** @beta */\nexport class ComponentBuilder implements Serializable<Component> {\n  protected spec: BuildableComponent\n\n  constructor(spec?: ComponentInput) {\n    this.spec = {options: {}, ...(spec ? spec : {})}\n  }\n\n  id(id: string): ComponentBuilder {\n    return this.clone({id})\n  }\n\n  getId(): BuildableComponent['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ComponentBuilder {\n    return this.clone({title, id: this.spec.id || camelCase(title)})\n  }\n\n  getTitle(): BuildableComponent['title'] {\n    return this.spec.title\n  }\n\n  child(child: Child): ComponentBuilder {\n    return this.clone({child})\n  }\n\n  getChild(): BuildableComponent['child'] {\n    return this.spec.child\n  }\n\n  component(component: UserComponent): ComponentBuilder {\n    return this.clone({component})\n  }\n\n  getComponent(): BuildableComponent['component'] {\n    return this.spec.component\n  }\n\n  options(options: {[key: string]: unknown}): ComponentBuilder {\n    return this.clone({options})\n  }\n\n  getOptions(): NonNullable<BuildableComponent['options']> {\n    return this.spec.options || {}\n  }\n\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[]): ComponentBuilder {\n    return this.clone({menuItems})\n  }\n\n  getMenuItems(): BuildableComponent['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ComponentBuilder {\n    return this.clone({menuItemGroups})\n  }\n\n  getMenuItemGroups(): BuildableComponent['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  serialize(options: SerializeOptions = {path: []}): Component {\n    const {id, title, child, options: componentOptions, component} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for `component` structure item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!component) {\n      throw new SerializeError(\n        '`component` is required for `component` structure item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      type: 'component',\n      child,\n      component,\n      options: componentOptions || {},\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, options.path)\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, options.path)\n      ),\n    }\n  }\n\n  clone(withSpec?: BuildableComponent): ComponentBuilder {\n    const builder = new ComponentBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {kebabCase} from 'lodash'\nimport {Serializable, SerializeOptions, SerializePath} from '../StructureNodes'\nimport {HELP_URL, SerializeError} from '../SerializeError'\nimport {validateId} from '../util/validateId'\nimport {View} from '../types'\nimport {ComponentViewBuilder} from './ComponentView'\nimport {FormViewBuilder} from './FormView'\n\n/** @beta */\nexport interface BaseView {\n  id: string\n  title: string\n  icon?: React.ComponentType | React.ReactNode\n}\n\n/** @beta */\nexport abstract class GenericViewBuilder<TView extends Partial<BaseView>, ConcreteImpl>\n  implements Serializable<BaseView>\n{\n  protected spec: TView = {} as TView\n\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n\n  getId(): TView['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: this.spec.id || kebabCase(title)})\n  }\n\n  getTitle(): TView['title'] {\n    return this.spec.title\n  }\n\n  icon(icon: React.ComponentType | React.ReactNode): ConcreteImpl {\n    return this.clone({icon})\n  }\n\n  getIcon(): TView['icon'] {\n    return this.spec.icon\n  }\n\n  serialize(options: SerializeOptions = {path: []}): BaseView {\n    const {id, title, icon} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!title) {\n      throw new SerializeError(\n        '`title` is required for view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      icon,\n    }\n  }\n\n  abstract clone(withSpec?: Partial<BaseView>): ConcreteImpl\n}\n\nfunction isSerializable(view: BaseView | Serializable<BaseView>): view is Serializable<BaseView> {\n  return typeof (view as Serializable<BaseView>).serialize === 'function'\n}\n\n/** @internal */\nexport function maybeSerializeView(\n  item: View | Serializable<View>,\n  index: number,\n  path: SerializePath\n): View {\n  return isSerializable(item) ? item.serialize({path, index}) : item\n}\n\n/** @beta */\nexport type ViewBuilder = ComponentViewBuilder | FormViewBuilder\n","import {SerializeOptions} from '../StructureNodes'\nimport {SerializeError, HELP_URL} from '../SerializeError'\nimport type {UserViewComponent} from '../types'\nimport {BaseView, GenericViewBuilder} from './View'\nimport {isRecord} from 'sanity'\n\n/** @beta */\nexport interface ComponentView<TOptions = Record<string, any>> extends BaseView {\n  type: 'component'\n  component: UserViewComponent\n  options: TOptions\n}\n\nconst isComponentSpec = (spec: unknown): spec is ComponentView =>\n  isRecord(spec) && spec.type === 'component'\n\n/** @beta */\nexport class ComponentViewBuilder extends GenericViewBuilder<\n  Partial<ComponentView>,\n  ComponentViewBuilder\n> {\n  protected spec: Partial<ComponentView>\n\n  constructor(componentOrSpec?: UserViewComponent | Partial<ComponentView>) {\n    const spec = isComponentSpec(componentOrSpec) ? {...componentOrSpec} : {options: {}}\n\n    super()\n    this.spec = spec\n\n    const userComponent =\n      typeof componentOrSpec === 'function' ? componentOrSpec : this.spec.component\n\n    if (userComponent) {\n      // Because we're cloning, this'll return a new instance, so grab the spec from it\n      this.spec = this.component(userComponent).spec\n    }\n  }\n\n  component(component: UserViewComponent): ComponentViewBuilder {\n    return this.clone({component})\n  }\n\n  getComponent(): Partial<ComponentView>['component'] {\n    return this.spec.component\n  }\n\n  options(options: {[key: string]: any}): ComponentViewBuilder {\n    return this.clone({options})\n  }\n\n  getOptions(): ComponentView['options'] {\n    return this.spec.options || {}\n  }\n\n  serialize(options: SerializeOptions = {path: []}): ComponentView {\n    const base = super.serialize(options)\n\n    const component = this.spec.component\n    if (typeof component !== 'function') {\n      throw new SerializeError(\n        '`component` is required and must be a function for `component()` view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.COMPONENT_REQUIRED)\n    }\n\n    return {\n      ...base,\n      component,\n      options: this.spec.options || {},\n      type: 'component',\n    }\n  }\n\n  clone(withSpec?: Partial<ComponentView>): ComponentViewBuilder {\n    const builder = new ComponentViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {SerializeOptions} from '../StructureNodes'\nimport {BaseView, GenericViewBuilder} from './View'\n\n/** @beta */\nexport interface FormView extends BaseView {\n  type: 'form'\n}\n\n/** @beta */\nexport class FormViewBuilder extends GenericViewBuilder<Partial<BaseView>, FormViewBuilder> {\n  protected spec: Partial<FormView>\n\n  constructor(spec?: Partial<FormView>) {\n    super()\n    this.spec = {id: 'editor', title: 'Editor', ...(spec ? spec : {})}\n  }\n\n  serialize(options: SerializeOptions = {path: []}): FormView {\n    return {\n      ...super.serialize(options),\n      type: 'form',\n    }\n  }\n\n  clone(withSpec?: Partial<FormView>): FormViewBuilder {\n    const builder = new FormViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import type {UserViewComponent} from '../types'\nimport {ComponentView, ComponentViewBuilder} from './ComponentView'\nimport {FormView, FormViewBuilder} from './FormView'\n\nexport * from './FormView'\nexport * from './ComponentView'\nexport * from './View'\n\n/** @internal */\nexport const form = (spec?: Partial<FormView>): FormViewBuilder => new FormViewBuilder(spec)\n\n/** @internal */\nexport const component = (\n  componentOrSpec?: UserViewComponent | Partial<ComponentView>\n): ComponentViewBuilder => new ComponentViewBuilder(componentOrSpec)\n","import {uniq, camelCase} from 'lodash'\nimport {SchemaType} from '@sanity/types'\nimport {ChildResolver} from './ChildResolver'\nimport {SerializeOptions, Serializable, Child, DocumentNode, EditorNode} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {validateId} from './util/validateId'\nimport {ViewBuilder, maybeSerializeView} from './views/View'\nimport {form} from './views'\nimport type {StructureContext, View} from './types'\n\nconst createDocumentChildResolver =\n  ({resolveDocumentNode}: StructureContext): ChildResolver =>\n  (itemId, {params, path}) => {\n    const {type} = params\n\n    const parentPath = path.slice(0, path.length - 1)\n    const currentSegment = path[path.length - 1]\n\n    if (!type) {\n      throw new SerializeError(\n        `Invalid link. Your link must contain a \\`type\\`.`,\n        parentPath,\n        currentSegment\n      )\n    }\n\n    return resolveDocumentNode({documentId: itemId, schemaType: type})\n  }\n\n/** @beta */\nexport interface DocumentOptions {\n  id: string\n  type: string\n  template?: string\n  templateParameters?: Record<string, unknown>\n}\n\n/** @beta */\nexport type PartialDocumentNode = {\n  id?: string\n  title?: string\n  child?: Child\n  views?: (View | ViewBuilder)[]\n  options?: Partial<DocumentOptions>\n}\n\n/** @beta */\nexport class DocumentBuilder implements Serializable<DocumentNode> {\n  protected spec: PartialDocumentNode\n\n  constructor(protected _context: StructureContext, spec?: PartialDocumentNode) {\n    this.spec = spec ? spec : {}\n  }\n\n  id(id: string): DocumentBuilder {\n    return this.clone({id})\n  }\n\n  getId(): PartialDocumentNode['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): DocumentBuilder {\n    return this.clone({title, id: this.spec.id || camelCase(title)})\n  }\n\n  getTitle(): PartialDocumentNode['title'] {\n    return this.spec.title\n  }\n\n  child(child: Child): DocumentBuilder {\n    return this.clone({child})\n  }\n\n  getChild(): PartialDocumentNode['child'] {\n    return this.spec.child\n  }\n\n  documentId(documentId: string): DocumentBuilder {\n    // Let's try to be a bit helpful and assign an ID from document ID if none is specified\n    const paneId = this.spec.id || documentId\n    return this.clone({\n      id: paneId,\n      options: {\n        ...(this.spec.options || {}),\n        id: documentId,\n      },\n    })\n  }\n\n  getDocumentId(): Partial<DocumentOptions>['id'] {\n    return this.spec.options?.id\n  }\n\n  schemaType(documentType: SchemaType | string): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        type: typeof documentType === 'string' ? documentType : documentType.name,\n      },\n    })\n  }\n\n  getSchemaType(): Partial<DocumentOptions>['type'] {\n    return this.spec.options?.type\n  }\n\n  initialValueTemplate(templateId: string, parameters?: Record<string, unknown>): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        template: templateId,\n        templateParameters: parameters,\n      },\n    })\n  }\n\n  getInitialValueTemplate(): Partial<DocumentOptions>['template'] {\n    return this.spec.options?.template\n  }\n\n  getInitialValueTemplateParameters(): Partial<DocumentOptions>['templateParameters'] {\n    return this.spec.options?.templateParameters\n  }\n\n  views(views: (View | ViewBuilder)[]): DocumentBuilder {\n    return this.clone({views})\n  }\n\n  getViews(): (View | ViewBuilder)[] {\n    return this.spec.views || []\n  }\n\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): DocumentNode {\n    const urlId = path[index || path.length - 1]\n\n    // Try to grab document ID / editor ID from URL if not defined\n    const id = this.spec.id || (urlId && `${urlId}`) || ''\n    const options: Partial<DocumentOptions> = {\n      id,\n      type: undefined,\n      template: undefined,\n      templateParameters: undefined,\n      ...this.spec.options,\n    }\n\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for document nodes',\n        path,\n        index,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options || !options.id) {\n      throw new SerializeError(\n        'document id (`id`) is required for document nodes',\n        path,\n        id,\n        hint\n      ).withHelpUrl(HELP_URL.DOCUMENT_ID_REQUIRED)\n    }\n\n    if (!options || !options.type) {\n      throw new SerializeError(\n        'document type (`schemaType`) is required for document nodes',\n        path,\n        id,\n        hint\n      )\n    }\n\n    const views = (this.spec.views && this.spec.views.length > 0 ? this.spec.views : [form()]).map(\n      (item, i) => maybeSerializeView(item, i, path)\n    )\n\n    const viewIds = views.map((view) => view.id)\n    const dupes = uniq(viewIds.filter((viewId, i) => viewIds.includes(viewId, i + 1)))\n    if (dupes.length > 0) {\n      throw new SerializeError(\n        `document node has views with duplicate IDs: ${dupes.join(',  ')}`,\n        path,\n        id,\n        hint\n      )\n    }\n\n    return {\n      ...this.spec,\n      child: this.spec.child || createDocumentChildResolver(this._context),\n      id: validateId(id, path, index),\n      type: 'document',\n      options: getDocumentOptions(options),\n      views,\n    }\n  }\n\n  clone(withSpec: PartialDocumentNode = {}): DocumentBuilder {\n    const builder = new DocumentBuilder(this._context)\n    const options = {...(this.spec.options || {}), ...(withSpec.options || {})}\n    builder.spec = {...this.spec, ...withSpec, options}\n    return builder\n  }\n}\n\nfunction getDocumentOptions(spec: Partial<DocumentOptions>): DocumentOptions {\n  const opts: DocumentOptions = {\n    id: spec.id || '',\n    type: spec.type || '*',\n  }\n\n  if (spec.template) {\n    opts.template = spec.template\n  }\n\n  if (spec.templateParameters) {\n    opts.templateParameters = spec.templateParameters\n  }\n\n  return opts\n}\n\n/** @internal */\nexport function documentFromEditor(context: StructureContext, spec?: EditorNode): DocumentBuilder {\n  let doc = spec?.type\n    ? // Use user-defined document fragment as base if possible\n      context.resolveDocumentNode({schemaType: spec.type})\n    : // Fall back to plain old document builder\n      new DocumentBuilder(context)\n\n  if (!spec) return doc\n\n  const {id, type, template, templateParameters} = spec.options\n  doc = doc.id(spec.id).documentId(id)\n\n  if (type) {\n    doc = doc.schemaType(type)\n  }\n  if (template) {\n    doc = doc.initialValueTemplate(template, templateParameters)\n  }\n  if (spec.child) {\n    doc = doc.child(spec.child)\n  }\n\n  return doc\n}\n\n/** @internal */\nexport function documentFromEditorWithInitialValue(\n  {resolveDocumentNode, templates}: StructureContext,\n  templateId: string,\n  parameters?: Record<string, unknown>\n): DocumentBuilder {\n  const template = templates.find((t) => t.id === templateId)\n\n  if (!template) {\n    throw new Error(`Template with ID \"${templateId}\" not defined`)\n  }\n\n  return resolveDocumentNode({schemaType: template.schemaType}).initialValueTemplate(\n    templateId,\n    parameters\n  )\n}\n","export const layoutOptions = ['default', 'card', 'media', 'detail', 'block']\n","import {PartialDocumentList, getTypeNamesFromFilter} from './DocumentList'\nimport {StructureNode} from './StructureNodes'\n\n/** @beta */\nexport type IntentJsonParams = {[key: string]: any}\n\n/** @beta */\nexport type BaseIntentParams = {\n  type?: string\n  id?: string\n  template?: string\n}\n\n/** @internal */\nexport const DEFAULT_INTENT_HANDLER = Symbol('Document type list canHandleIntent')\n\n/** @beta */\nexport type IntentParams = BaseIntentParams | [BaseIntentParams, IntentJsonParams]\n\n/** @beta */\n// TODO: intents should be unified somewhere\nexport interface Intent {\n  type: string\n  params?: IntentParams\n}\n\n/** @beta */\nexport interface IntentChecker {\n  (\n    intentName: string,\n    params: {[key: string]: any},\n    context: {pane: StructureNode; index: number}\n  ): boolean\n  identity?: symbol\n}\n\n/** @internal */\nexport const defaultIntentChecker: IntentChecker = (intentName, params, {pane}): boolean => {\n  const isEdit = intentName === 'edit'\n  const isCreate = intentName === 'create'\n  const typedSpec = pane as PartialDocumentList\n  const paneFilter = typedSpec.options?.filter || ''\n  const paneParams = typedSpec.options?.params || {}\n  const typeNames = typedSpec.schemaTypeName\n    ? [typedSpec.schemaTypeName]\n    : getTypeNamesFromFilter(paneFilter, paneParams)\n\n  const initialValueTemplates = typedSpec.initialValueTemplates || []\n\n  if (isCreate && params.template) {\n    return initialValueTemplates.some((tpl) => tpl.templateId === params.template)\n  }\n\n  return (\n    (isEdit && params.id && typeNames.includes(params.type)) ||\n    (isCreate && typeNames.includes(params.type))\n  )\n}\n\ndefaultIntentChecker.identity = DEFAULT_INTENT_HANDLER\n","import {pickBy} from 'lodash'\nimport {ComposeIcon} from '@sanity/icons'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {Serializable, SerializeOptions, SerializePath} from './StructureNodes'\nimport {MenuItemBuilder, MenuItem} from './MenuItem'\nimport {IntentParams} from './Intent'\nimport {StructureContext} from './types'\nimport {InitialValueTemplateItem} from 'sanity'\n\n/** @beta */\nexport class InitialValueTemplateItemBuilder implements Serializable<InitialValueTemplateItem> {\n  protected spec: Partial<InitialValueTemplateItem>\n\n  constructor(protected _context: StructureContext, spec?: Partial<InitialValueTemplateItem>) {\n    this.spec = spec ? spec : {}\n  }\n\n  id(id: string): InitialValueTemplateItemBuilder {\n    return this.clone({id})\n  }\n\n  getId(): Partial<InitialValueTemplateItem>['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): InitialValueTemplateItemBuilder {\n    return this.clone({title})\n  }\n\n  getTitle(): Partial<InitialValueTemplateItem>['title'] {\n    return this.spec.title\n  }\n\n  description(description: string): InitialValueTemplateItemBuilder {\n    return this.clone({description})\n  }\n\n  getDescription(): Partial<InitialValueTemplateItem>['description'] {\n    return this.spec.description\n  }\n\n  templateId(templateId: string): InitialValueTemplateItemBuilder {\n    // Let's try to be a bit helpful and assign an ID from template ID if none is specified\n    const paneId = this.spec.id || templateId\n    return this.clone({\n      id: paneId,\n      templateId,\n    })\n  }\n\n  getTemplateId(): Partial<InitialValueTemplateItem>['templateId'] {\n    return this.spec.templateId\n  }\n\n  parameters(parameters: {[key: string]: any}): InitialValueTemplateItemBuilder {\n    return this.clone({parameters})\n  }\n\n  getParameters(): Partial<InitialValueTemplateItem>['parameters'] {\n    return this.spec.parameters\n  }\n\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): InitialValueTemplateItem {\n    const {spec, _context} = this\n    const {templates} = _context\n\n    if (typeof spec.id !== 'string' || !spec.id) {\n      throw new SerializeError(\n        '`id` is required for initial value template item nodes',\n        path,\n        index,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!spec.templateId) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const template = templates.find((t) => t.id === spec.templateId)\n\n    if (!template) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: spec.id,\n      templateId: spec.id,\n      schemaType: template.schemaType,\n      type: 'initialValueTemplateItem',\n      description: spec.description || template.description,\n      title: spec.title || template.title,\n      subtitle: spec.subtitle,\n      icon: spec.icon || template.icon,\n      initialDocumentId: spec.initialDocumentId,\n      parameters: spec.parameters,\n    }\n  }\n\n  clone(withSpec: Partial<InitialValueTemplateItem> = {}): InitialValueTemplateItemBuilder {\n    const builder = new InitialValueTemplateItemBuilder(this._context)\n    builder.spec = {...this.spec, ...withSpec}\n    return builder\n  }\n}\n\n/** @internal */\nexport function defaultInitialValueTemplateItems(\n  context: StructureContext\n): InitialValueTemplateItemBuilder[] {\n  const {schema, getStructureBuilder, templates} = context\n\n  // Sort templates by their schema type, in order or definition\n  const typeNames = schema.getTypeNames()\n  const ordered = templates\n    // Don't list templates that require parameters\n    // TODO: this should use the new-document template items instead maybe?\n    .filter((tpl) => !tpl.parameters?.length)\n    .sort((a, b) => typeNames.indexOf(a.schemaType) - typeNames.indexOf(b.schemaType))\n\n  // Create actual template items out of the templates\n  return ordered.map((tpl) => getStructureBuilder().initialValueTemplateItem(tpl.id))\n}\n\n/** @internal */\nexport function maybeSerializeInitialValueTemplateItem(\n  item: InitialValueTemplateItem | InitialValueTemplateItemBuilder,\n  index: number,\n  path: SerializePath\n): InitialValueTemplateItem {\n  return item instanceof InitialValueTemplateItemBuilder ? item.serialize({path, index}) : item\n}\n\n/** @internal */\nexport function menuItemsFromInitialValueTemplateItems(\n  context: StructureContext,\n  templateItems: InitialValueTemplateItem[]\n): MenuItem[] {\n  const {schema, templates} = context\n  return templateItems.map((item) => {\n    const template = templates.find((t) => t.id === item.templateId)\n    const title = item.title || template?.title || 'Create new'\n    const params = pickBy(\n      {type: template && template.schemaType, template: item.templateId},\n      Boolean\n    )\n    const intentParams: IntentParams = item.parameters ? [params, item.parameters] : params\n    const schemaType = template && schema.get(template.schemaType)\n\n    return new MenuItemBuilder(context)\n      .title(title)\n      .icon((template && template.icon) || schemaType?.icon || ComposeIcon)\n      .intent({type: 'create', params: intentParams})\n      .serialize()\n  })\n}\n","import {camelCase} from 'lodash'\nimport {Child, Serializable, SerializeOptions, StructureNode} from './StructureNodes'\nimport {layoutOptions} from './Layout'\nimport {MenuItem, MenuItemBuilder, maybeSerializeMenuItem} from './MenuItem'\nimport {MenuItemGroup, MenuItemGroupBuilder, maybeSerializeMenuItemGroup} from './MenuItemGroup'\nimport {IntentChecker, defaultIntentChecker} from './Intent'\nimport {SerializeError} from './SerializeError'\nimport {\n  InitialValueTemplateItemBuilder,\n  maybeSerializeInitialValueTemplateItem,\n} from './InitialValueTemplateItem'\nimport {validateId} from './util/validateId'\nimport {PreviewLayoutKey, InitialValueTemplateItem} from 'sanity'\n\nfunction noChildResolver() {\n  return undefined\n}\n\n/** @internal */\nexport const shallowIntentChecker: IntentChecker = (intentName, params, {pane, index}): boolean => {\n  return index <= 1 && defaultIntentChecker(intentName, params, {pane, index})\n}\n\n/** @beta */\nexport interface ListDisplayOptions {\n  showIcons?: boolean\n}\n\n/** @beta */\nexport interface BaseGenericList extends StructureNode {\n  defaultLayout?: PreviewLayoutKey\n  canHandleIntent?: IntentChecker\n  displayOptions?: ListDisplayOptions\n  child: Child\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n}\n\n/** @beta */\n// \"POJO\"/verbatim-version - end result\nexport interface GenericList extends BaseGenericList {\n  type: string\n  menuItems: MenuItem[]\n  menuItemGroups: MenuItemGroup[]\n}\n\n/** @beta */\n// Used internally in builder classes to make everything optional\nexport interface BuildableGenericList extends Partial<BaseGenericList> {\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/** @beta */\n// Input version, allows builders and only requires things not inferrable\nexport interface GenericListInput extends StructureNode {\n  id: string\n  title: string\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n  defaultLayout?: PreviewLayoutKey\n  canHandleIntent?: IntentChecker\n  child?: Child\n}\n\n/** @beta */\nexport abstract class GenericListBuilder<TList extends BuildableGenericList, ConcreteImpl>\n  implements Serializable<GenericList>\n{\n  protected initialValueTemplatesSpecified = false\n  protected spec: TList = {} as TList\n\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n\n  getId(): TList['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: this.spec.id || camelCase(title)})\n  }\n\n  getTitle(): TList['title'] {\n    return this.spec.title\n  }\n\n  defaultLayout(defaultLayout: PreviewLayoutKey): ConcreteImpl {\n    return this.clone({defaultLayout})\n  }\n\n  getDefaultLayout(): TList['defaultLayout'] {\n    return this.spec.defaultLayout\n  }\n\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[] | undefined): ConcreteImpl {\n    return this.clone({menuItems})\n  }\n\n  getMenuItems(): TList['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ConcreteImpl {\n    return this.clone({menuItemGroups})\n  }\n\n  getMenuItemGroups(): TList['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  child(child: Child): ConcreteImpl {\n    return this.clone({child})\n  }\n\n  getChild(): TList['child'] {\n    return this.spec.child\n  }\n\n  canHandleIntent(canHandleIntent: IntentChecker): ConcreteImpl {\n    return this.clone({canHandleIntent})\n  }\n\n  getCanHandleIntent(): TList['canHandleIntent'] {\n    return this.spec.canHandleIntent\n  }\n\n  showIcons(enabled = true): ConcreteImpl {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcons: enabled},\n    })\n  }\n\n  getShowIcons(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcons : undefined\n  }\n\n  initialValueTemplates(\n    templates:\n      | InitialValueTemplateItem\n      | InitialValueTemplateItemBuilder\n      | Array<InitialValueTemplateItem | InitialValueTemplateItemBuilder>\n  ): ConcreteImpl {\n    this.initialValueTemplatesSpecified = true\n    return this.clone({initialValueTemplates: Array.isArray(templates) ? templates : [templates]})\n  }\n\n  getInitialValueTemplates(): TList['initialValueTemplates'] {\n    return this.spec.initialValueTemplates\n  }\n\n  serialize(options: SerializeOptions = {path: []}): GenericList {\n    const id = this.spec.id || ''\n    const path = options.path\n\n    const defaultLayout = this.spec.defaultLayout\n    if (defaultLayout && !layoutOptions.includes(defaultLayout)) {\n      throw new SerializeError(\n        `\\`layout\\` must be one of ${layoutOptions.map((item) => `\"${item}\"`).join(', ')}`,\n        path,\n        id || options.index,\n        this.spec.title\n      )\n    }\n\n    const initialValueTemplates = (this.spec.initialValueTemplates || []).map((item, i) =>\n      maybeSerializeInitialValueTemplateItem(item, i, path)\n    )\n\n    return {\n      id: validateId(id, options.path, id || options.index),\n      title: this.spec.title,\n      type: 'genericList',\n      defaultLayout,\n      child: this.spec.child || noChildResolver,\n      canHandleIntent: this.spec.canHandleIntent || shallowIntentChecker,\n      displayOptions: this.spec.displayOptions,\n      initialValueTemplates,\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, path)\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, path)\n      ),\n    }\n  }\n\n  abstract clone(_withSpec?: object): ConcreteImpl\n}\n","import {SchemaType, SortOrderingItem} from '@sanity/types'\nimport {SanityClient} from '@sanity/client'\nimport {ComposeIcon} from '@sanity/icons'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {SerializeOptions, Child} from './StructureNodes'\nimport {ChildResolver, ChildResolverOptions, ItemChild} from './ChildResolver'\nimport {\n  GenericListBuilder,\n  BuildableGenericList,\n  GenericList,\n  GenericListInput,\n} from './GenericList'\nimport {DocumentBuilder} from './Document'\nimport {StructureContext} from './types'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, InitialValueTemplateItem, SourceClientOptions} from 'sanity'\n\nconst resolveTypeForDocument = async (\n  getClient: (options: SourceClientOptions) => SanityClient,\n  id: string\n): Promise<string | undefined> => {\n  const query = '*[_id in [$documentId, $draftId]]._type'\n  const documentId = id.replace(/^drafts\\./, '')\n  const draftId = `drafts.${documentId}`\n\n  const types = await getClient(DEFAULT_STUDIO_CLIENT_OPTIONS).fetch(\n    query,\n    {documentId, draftId},\n    {tag: 'structure.resolve-type'}\n  )\n\n  return types[0]\n}\n\nconst validateFilter = (spec: PartialDocumentList, options: SerializeOptions) => {\n  const filter = spec.options?.filter.trim() || ''\n\n  if (['*', '{'].includes(filter[0])) {\n    throw new SerializeError(\n      `\\`filter\\` cannot start with \\`${filter[0]}\\` - looks like you are providing a query, not a filter`,\n      options.path,\n      spec.id,\n      spec.title\n    ).withHelpUrl(HELP_URL.QUERY_PROVIDED_FOR_FILTER)\n  }\n\n  return filter\n}\n\nconst createDocumentChildResolverForItem =\n  (context: StructureContext): ChildResolver =>\n  (itemId: string, options: ChildResolverOptions): ItemChild | Promise<ItemChild> | undefined => {\n    const parentItem = options.parent as DocumentList\n    const template = options.params?.template\n      ? context.templates.find((tpl) => tpl.id === options.params.template)\n      : undefined\n    const type = template\n      ? template.schemaType\n      : parentItem.schemaTypeName || resolveTypeForDocument(context.getClient, itemId)\n\n    return Promise.resolve(type).then((schemaType) =>\n      schemaType\n        ? context.resolveDocumentNode({schemaType, documentId: itemId})\n        : new DocumentBuilder(context).id('editor').documentId(itemId).schemaType('')\n    )\n  }\n\n/** @beta */\nexport interface PartialDocumentList extends BuildableGenericList {\n  options?: DocumentListOptions\n  schemaTypeName?: string\n}\n\n/** @beta */\nexport interface DocumentListInput extends GenericListInput {\n  options: DocumentListOptions\n}\n\n/** @beta */\nexport interface DocumentList extends GenericList {\n  type: 'documentList'\n  options: DocumentListOptions\n  child: Child\n  schemaTypeName?: string\n}\n\n/** @beta */\nexport interface DocumentListOptions {\n  filter: string\n  params?: Record<string, unknown>\n  apiVersion?: string\n  defaultOrdering?: SortOrderingItem[]\n}\n\n/** @beta */\nexport class DocumentListBuilder extends GenericListBuilder<\n  PartialDocumentList,\n  DocumentListBuilder\n> {\n  protected spec: PartialDocumentList\n\n  constructor(protected _context: StructureContext, spec?: DocumentListInput) {\n    super()\n    this.spec = spec || {}\n    this.initialValueTemplatesSpecified = Boolean(spec?.initialValueTemplates)\n  }\n\n  apiVersion(apiVersion: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {filter: ''}), apiVersion}})\n  }\n\n  getApiVersion(): string | undefined {\n    return this.spec.options?.apiVersion\n  }\n\n  filter(filter: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {}), filter}})\n  }\n\n  getFilter(): string | undefined {\n    return this.spec.options?.filter\n  }\n\n  schemaType(type: SchemaType | string): DocumentListBuilder {\n    const schemaTypeName = typeof type === 'string' ? type : type.name\n    return this.clone({schemaTypeName})\n  }\n\n  getSchemaType(): string | undefined {\n    return this.spec.schemaTypeName\n  }\n\n  params(params: Record<string, unknown>): DocumentListBuilder {\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), params},\n    })\n  }\n\n  getParams(): Record<string, unknown> | undefined {\n    return this.spec.options?.params\n  }\n\n  defaultOrdering(ordering: SortOrderingItem[]): DocumentListBuilder {\n    if (!Array.isArray(ordering)) {\n      throw new Error('`defaultOrdering` must be an array of order clauses')\n    }\n\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), defaultOrdering: ordering},\n    })\n  }\n\n  getDefaultOrdering(): SortOrderingItem[] | undefined {\n    return this.spec.options?.defaultOrdering\n  }\n\n  serialize(options: SerializeOptions = {path: []}): DocumentList {\n    if (typeof this.spec.id !== 'string' || !this.spec.id) {\n      throw new SerializeError(\n        '`id` is required for document lists',\n        options.path,\n        options.index,\n        this.spec.title\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!this.spec.options || !this.spec.options.filter) {\n      throw new SerializeError(\n        '`filter` is required for document lists',\n        options.path,\n        this.spec.id,\n        this.spec.title\n      ).withHelpUrl(HELP_URL.FILTER_REQUIRED)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'documentList',\n      schemaTypeName: this.spec.schemaTypeName,\n      child: this.spec.child || createDocumentChildResolverForItem(this._context),\n      options: {\n        ...this.spec.options,\n        apiVersion:\n          this.spec.options.apiVersion ||\n          // If this is a simple type filter, use modern API version - otherwise default to v1\n          (this.spec.options?.filter === '_type == $type' ? '2021-06-07' : '1'),\n        filter: validateFilter(this.spec, options),\n      },\n    }\n  }\n\n  clone(withSpec?: PartialDocumentList): DocumentListBuilder {\n    const builder = new DocumentListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n\n    if (!this.initialValueTemplatesSpecified) {\n      builder.spec.initialValueTemplates = inferInitialValueTemplates(this._context, builder.spec)\n    }\n\n    if (!builder.spec.schemaTypeName) {\n      builder.spec.schemaTypeName = inferTypeName(builder.spec)\n    }\n\n    return builder\n  }\n\n  getSpec(): PartialDocumentList {\n    return this.spec\n  }\n}\n\nfunction inferInitialValueTemplates(\n  context: StructureContext,\n  spec: PartialDocumentList\n): InitialValueTemplateItem[] | undefined {\n  const {document} = context\n  const {schemaTypeName, options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = schemaTypeName\n    ? [schemaTypeName]\n    : Array.from(new Set(getTypeNamesFromFilter(filter, params)))\n\n  if (typeNames.length === 0) {\n    return undefined\n  }\n\n  return typeNames\n    .flatMap((schemaType) =>\n      document.resolveNewDocumentOptions({\n        type: 'structure',\n        schemaType,\n      })\n    )\n    .map((option) => ({...option, icon: ComposeIcon}))\n}\n\nfunction inferTypeName(spec: PartialDocumentList): string | undefined {\n  const {options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = getTypeNamesFromFilter(filter, params)\n  return typeNames.length === 1 ? typeNames[0] : undefined\n}\n\n/** @internal */\nexport function getTypeNamesFromFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  let typeNames = getTypeNamesFromEqualityFilter(filter, params)\n\n  if (typeNames.length === 0) {\n    typeNames = getTypeNamesFromInTypesFilter(filter, params)\n  }\n\n  return typeNames\n}\n\n// From _type == \"movie\" || _type == $otherType\nfunction getTypeNamesFromEqualityFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  const pattern =\n    /\\b_type\\s*==\\s*(['\"].*?['\"]|\\$.*?(?:\\s|$))|\\B(['\"].*?['\"]|\\$.*?(?:\\s|$))\\s*==\\s*_type/g\n  const matches: string[] = []\n  let match\n  while ((match = pattern.exec(filter)) !== null) {\n    matches.push(match[1] || match[2])\n  }\n\n  return matches\n    .map((candidate) => {\n      const typeName = candidate[0] === '$' ? params[candidate.slice(1)] : candidate\n      const normalized = ((typeName as string) || '').trim().replace(/^[\"']|[\"']$/g, '')\n      return normalized\n    })\n    .filter(Boolean)\n}\n\n// From _type in [\"dog\", \"cat\", $otherSpecies]\nfunction getTypeNamesFromInTypesFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  const pattern = /\\b_type\\s+in\\s+\\[(.*?)\\]/\n  const matches = filter.match(pattern)\n  if (!matches) {\n    return []\n  }\n\n  return matches[1]\n    .split(/,\\s*/)\n    .map((match) => match.trim().replace(/^[\"']+|[\"']+$/g, ''))\n    .map((item) => (item[0] === '$' ? params[item.slice(1)] : item))\n    .filter(Boolean) as string[]\n}\n","import {find} from 'lodash'\nimport {SerializePath, SerializeOptions, Divider} from './StructureNodes'\nimport {ChildResolverOptions, ChildResolver} from './ChildResolver'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {ListItem, ListItemBuilder} from './ListItem'\nimport {IntentChecker} from './Intent'\nimport {isDocumentListItem} from './DocumentListItem'\nimport {\n  GenericListBuilder,\n  BuildableGenericList,\n  GenericList,\n  GenericListInput,\n  shallowIntentChecker,\n} from './GenericList'\nimport {StructureContext} from './types'\nimport {isRecord} from 'sanity'\n\nconst getArgType = (thing: ListItem) => {\n  if (thing instanceof ListBuilder) {\n    return 'ListBuilder'\n  }\n\n  if (isPromise<ListItem>(thing)) {\n    return 'Promise'\n  }\n\n  return Array.isArray(thing) ? 'array' : typeof thing\n}\n\nconst isListItem = (item: ListItem | Divider): item is ListItem => {\n  return item.type === 'listItem'\n}\n\nconst defaultCanHandleIntent: IntentChecker = (intentName: string, params, context) => {\n  const pane = context.pane as List\n  const items = pane.items || []\n  return (\n    items\n      .filter(isDocumentListItem)\n      .some((item) => item.schemaType.name === params.type && item._id === params.id) ||\n    shallowIntentChecker(intentName, params, context)\n  )\n}\n\nconst resolveChildForItem: ChildResolver = (itemId: string, options: ChildResolverOptions) => {\n  const parentItem = options.parent as List\n  const items = parentItem.items.filter(isListItem)\n  const target = (items.find((item) => item.id === itemId) || {child: undefined}).child\n\n  if (!target || typeof target !== 'function') {\n    return target\n  }\n\n  return typeof target === 'function' ? target(itemId, options) : target\n}\n\nfunction maybeSerializeListItem(\n  item: ListItem | ListItemBuilder | Divider,\n  index: number,\n  path: SerializePath\n): ListItem | Divider {\n  if (item instanceof ListItemBuilder) {\n    return item.serialize({path, index})\n  }\n\n  const listItem = item as ListItem\n  if (listItem && listItem.type === 'divider') {\n    return item as Divider\n  }\n\n  if (!listItem || listItem.type !== 'listItem') {\n    const gotWhat = (listItem && listItem.type) || getArgType(listItem)\n    const helpText = gotWhat === 'array' ? ' - did you forget to spread (...moreItems)?' : ''\n    throw new SerializeError(\n      `List items must be of type \"listItem\", got \"${gotWhat}\"${helpText}`,\n      path,\n      index\n    ).withHelpUrl(HELP_URL.INVALID_LIST_ITEM)\n  }\n\n  return item\n}\n\nfunction isPromise<T>(thing: unknown): thing is PromiseLike<T> {\n  return isRecord(thing) && typeof thing.then === 'function'\n}\n\n/** @beta */\nexport interface List extends GenericList {\n  type: 'list'\n  items: (ListItem | Divider)[]\n}\n\n/** @beta */\nexport interface ListInput extends GenericListInput {\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/** @beta */\nexport interface BuildableList extends BuildableGenericList {\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/** @beta */\nexport class ListBuilder extends GenericListBuilder<BuildableList, ListBuilder> {\n  protected spec: BuildableList\n\n  constructor(protected _context: StructureContext, spec?: ListInput) {\n    super()\n    this.spec = spec ? spec : {}\n    this.initialValueTemplatesSpecified = Boolean(spec && spec.initialValueTemplates)\n  }\n\n  items(items: (ListItemBuilder | ListItem | Divider)[]): ListBuilder {\n    return this.clone({items})\n  }\n\n  getItems(): BuildableList['items'] {\n    return this.spec.items\n  }\n\n  serialize(options: SerializeOptions = {path: []}): List {\n    const id = this.spec.id\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for lists',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const items = typeof this.spec.items === 'undefined' ? [] : this.spec.items\n    if (!Array.isArray(items)) {\n      throw new SerializeError(\n        '`items` must be an array of items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.LIST_ITEMS_MUST_BE_ARRAY)\n    }\n\n    const path = (options.path || []).concat(id)\n    const serializedItems = items.map((item, index) => maybeSerializeListItem(item, index, path))\n    const dupes = serializedItems.filter((val, i) => find(serializedItems, {id: val.id}, i + 1))\n\n    if (dupes.length > 0) {\n      const dupeIds = dupes.map((item) => item.id).slice(0, 5)\n      const dupeDesc = dupes.length > 5 ? `${dupeIds.join(', ')}...` : dupeIds.join(', ')\n      throw new SerializeError(\n        `List items with same ID found (${dupeDesc})`,\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.LIST_ITEM_IDS_MUST_BE_UNIQUE)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'list',\n      canHandleIntent: this.spec.canHandleIntent || defaultCanHandleIntent,\n      child: this.spec.child || resolveChildForItem,\n      items: serializedItems,\n    }\n  }\n\n  clone(withSpec?: BuildableList): ListBuilder {\n    const builder = new ListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {camelCase} from 'lodash'\nimport {SchemaType} from '@sanity/types'\nimport {Observable} from 'rxjs'\nimport {SerializeOptions, Serializable, Collection, CollectionBuilder} from './StructureNodes'\nimport {ChildResolver, ItemChild} from './ChildResolver'\nimport {DocumentListBuilder} from './DocumentList'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {ListBuilder} from './List'\nimport {DocumentBuilder} from './Document'\nimport {ComponentBuilder} from './Component'\nimport {validateId} from './util/validateId'\nimport {StructureContext} from './types'\n\n/** @beta */\nexport type UnserializedListItemChild =\n  | Collection\n  | CollectionBuilder\n  | ChildResolver\n  | Observable<ItemChild>\n\n/** @beta */\nexport type ListItemChild = Collection | ChildResolver | Observable<ItemChild> | undefined\n\n/** @beta */\nexport interface ListItemSerializeOptions extends SerializeOptions {\n  titleIsOptional?: boolean\n}\n\n/** @beta */\nexport interface ListItemDisplayOptions {\n  showIcon?: boolean\n}\n\n/** @beta */\nexport interface ListItemInput {\n  id: string\n  title?: string\n  icon?: React.ComponentType | React.ReactNode\n  child?: ListItemChild\n  displayOptions?: ListItemDisplayOptions\n  schemaType?: SchemaType | string\n}\n\n/** @beta */\nexport interface ListItem {\n  id: string\n  type: string\n  title?: string\n  icon?: React.ComponentType | React.ReactNode\n  child?: ListItemChild\n  displayOptions?: ListItemDisplayOptions\n  schemaType?: SchemaType\n}\n\n/** @beta */\nexport interface UnserializedListItem {\n  id: string\n  title: string\n  icon?: React.ComponentType | React.ReactNode\n  child?: UnserializedListItemChild\n  displayOptions?: ListItemDisplayOptions\n  schemaType?: SchemaType | string\n}\n\n/** @beta */\nexport type PartialListItem = Partial<UnserializedListItem>\n\n/** @beta */\nexport class ListItemBuilder implements Serializable<ListItem> {\n  protected spec: PartialListItem\n\n  constructor(protected _context: StructureContext, spec?: ListItemInput) {\n    this.spec = spec ? spec : {}\n  }\n\n  id(id: string): ListItemBuilder {\n    return this.clone({id})\n  }\n\n  getId(): PartialListItem['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ListItemBuilder {\n    return this.clone({title, id: this.spec.id || camelCase(title)})\n  }\n\n  getTitle(): PartialListItem['title'] {\n    return this.spec.title\n  }\n\n  icon(icon: React.ComponentType | React.ReactNode): ListItemBuilder {\n    return this.clone({icon})\n  }\n\n  showIcon(enabled = true): ListItemBuilder {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcon: enabled},\n    })\n  }\n\n  getShowIcon(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcon : undefined\n  }\n\n  getIcon(): PartialListItem['icon'] {\n    return this.spec.icon\n  }\n\n  child(child: UnserializedListItemChild): ListItemBuilder {\n    return this.clone({child})\n  }\n\n  getChild(): PartialListItem['child'] {\n    return this.spec.child\n  }\n\n  schemaType(schemaType: SchemaType | string): ListItemBuilder {\n    return this.clone({schemaType})\n  }\n\n  getSchemaType(): PartialListItem['schemaType'] {\n    const schemaType = this.spec.schemaType\n\n    if (typeof schemaType === 'string') {\n      return this._context.schema.get(schemaType)\n    }\n\n    return this.spec.schemaType\n  }\n\n  serialize(options: ListItemSerializeOptions = {path: []}): ListItem {\n    const {id, title, child} = this.spec\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for list items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options.titleIsOptional && (typeof title !== 'string' || !title)) {\n      throw new SerializeError('`title` is required for list items', options.path, id).withHelpUrl(\n        HELP_URL.TITLE_REQUIRED\n      )\n    }\n\n    let schemaType = this.spec.schemaType\n    if (typeof schemaType === 'string') {\n      const type = this._context.schema.get(schemaType)\n      if (!type) {\n        throw new SerializeError(\n          `Could not find type \"${schemaType}\" in schema`,\n          options.path,\n          id\n        ).withHelpUrl(HELP_URL.SCHEMA_TYPE_NOT_FOUND)\n      }\n\n      schemaType = type\n    }\n\n    const serializeOptions = {path: options.path.concat(id), hint: 'child'}\n    let listChild =\n      child instanceof ComponentBuilder ||\n      child instanceof DocumentListBuilder ||\n      child instanceof DocumentBuilder ||\n      child instanceof ListBuilder\n        ? child.serialize(serializeOptions)\n        : child\n\n    // In the case of a function, create a bound version that will pass the correct serialize\n    // context, so we may lazily resolve it at some point in the future without losing context\n    if (typeof listChild === 'function') {\n      const originalChild = listChild\n      listChild = (itemId, childOptions) => {\n        return originalChild(itemId, {...childOptions, serializeOptions})\n      }\n    }\n\n    return {\n      ...this.spec,\n      id: validateId(id, options.path, options.index),\n      schemaType,\n      child: listChild,\n      title,\n      type: 'listItem',\n    }\n  }\n\n  clone(withSpec?: PartialListItem): ListItemBuilder {\n    const builder = new ListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {SchemaType} from '@sanity/types'\nimport {SerializeOptions} from './StructureNodes'\nimport {ListItemBuilder, ListItem, UnserializedListItem, ListItemInput} from './ListItem'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {DocumentBuilder} from './Document'\nimport {StructureContext} from './types'\nimport {isRecord} from 'sanity'\n\n/** @beta */\nexport interface DocumentListItemInput extends ListItemInput {\n  schemaType: SchemaType | string\n}\n\n/** @beta */\nexport interface DocumentListItem extends ListItem {\n  schemaType: SchemaType\n  _id: string\n}\n\n/** @beta */\nexport type PartialDocumentListItem = Partial<UnserializedListItem>\n\nconst createDefaultChildResolver =\n  (context: StructureContext, spec: PartialDocumentListItem) => (documentId: string) => {\n    const schemaType =\n      spec.schemaType &&\n      (typeof spec.schemaType === 'string' ? spec.schemaType : spec.schemaType.name)\n\n    return schemaType\n      ? context.resolveDocumentNode({schemaType, documentId})\n      : new DocumentBuilder(context).id('documentEditor').documentId(documentId)\n  }\n\n/** @beta */\nexport class DocumentListItemBuilder extends ListItemBuilder {\n  protected spec: PartialDocumentListItem\n\n  constructor(protected _context: StructureContext, spec?: DocumentListItemInput) {\n    super(_context, spec)\n    this.spec = spec ? spec : {}\n  }\n\n  serialize(options: SerializeOptions = {path: []}): DocumentListItem {\n    const spec = super.serialize({...options, titleIsOptional: true})\n\n    if (!spec.schemaType) {\n      throw new SerializeError(\n        '`schemaType` is required for document list items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.SCHEMA_TYPE_REQUIRED)\n    }\n\n    const child = spec.child || createDefaultChildResolver(this._context, spec)\n    return {...spec, child, schemaType: spec.schemaType, _id: spec.id}\n  }\n\n  clone(withSpec?: PartialDocumentListItem): DocumentListItemBuilder {\n    const builder = new DocumentListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport function isDocumentListItem(item: unknown): item is DocumentListItem {\n  return isRecord(item) && typeof item.schemaType !== 'undefined' && typeof item._id === 'string'\n}\n","import {SchemaType} from '@sanity/types'\nimport {DocumentListBuilder, DocumentListInput, PartialDocumentList} from './DocumentList'\nimport {Child} from './StructureNodes'\nimport {DEFAULT_INTENT_HANDLER} from './Intent'\nimport {GenericListInput} from './GenericList'\nimport {StructureContext} from './types'\n\n/** @beta */\nexport interface DocumentTypeListInput extends Partial<GenericListInput> {\n  schemaType: SchemaType | string\n}\n\n/** @beta */\nexport class DocumentTypeListBuilder extends DocumentListBuilder {\n  protected spec: PartialDocumentList\n\n  constructor(protected _context: StructureContext, spec?: DocumentListInput) {\n    super(_context)\n    this.spec = spec ? spec : {}\n  }\n\n  child(child: Child): DocumentTypeListBuilder {\n    return this.cloneWithoutDefaultIntentHandler({child})\n  }\n\n  clone(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    builder.spec = {...this.spec, ...parent.getSpec(), ...(withSpec || {})}\n    return builder\n  }\n\n  cloneWithoutDefaultIntentHandler(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    const canHandleIntent = this.spec.canHandleIntent\n    const shouldOverride = canHandleIntent && canHandleIntent.identity === DEFAULT_INTENT_HANDLER\n    const override = shouldOverride ? {canHandleIntent: undefined} : {}\n    builder.spec = {\n      ...parent.getSpec(),\n      ...this.spec,\n      ...(withSpec || {}),\n      ...override,\n    }\n    return builder\n  }\n}\n","import {SchemaType} from '@sanity/types'\nimport {startCase} from 'lodash'\nimport {StackCompactIcon, StackIcon} from '@sanity/icons'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType} from './MenuItem'\nimport {DEFAULT_SELECTED_ORDERING_OPTION} from './Sort'\nimport {DocumentListBuilder} from './DocumentList'\nimport {ListItemBuilder, ListItem} from './ListItem'\nimport {DocumentTypeListBuilder, DocumentTypeListInput} from './DocumentTypeList'\nimport {defaultIntentChecker} from './Intent'\nimport {List} from './List'\nimport {Collection} from './StructureNodes'\nimport {StructureContext} from './types'\n\nfunction shouldShowIcon(schemaType: SchemaType): boolean {\n  const preview = schemaType.preview\n  return Boolean(preview && (preview.prepare || (preview.select && preview.select.media)))\n}\n\nconst BUNDLED_DOC_TYPES = ['sanity.imageAsset', 'sanity.fileAsset']\n\nfunction isBundledDocType(typeName: string) {\n  return BUNDLED_DOC_TYPES.includes(typeName)\n}\n\nfunction isDocumentType(schemaType: SchemaType) {\n  return schemaType.type?.name === 'document'\n}\n\nfunction isList(collection: Collection): collection is List {\n  return collection.type === 'list'\n}\n\nexport function getDocumentTypes({schema}: StructureContext): string[] {\n  return schema\n    .getTypeNames()\n    .filter((n) => {\n      const schemaType = schema.get(n)\n      return schemaType && isDocumentType(schemaType)\n    })\n    .filter((n) => !isBundledDocType(n))\n}\n\nexport function getDocumentTypeListItems(context: StructureContext): ListItemBuilder[] {\n  const types = getDocumentTypes(context)\n  return types.map((typeName) => getDocumentTypeListItem(context, typeName))\n}\n\nexport function getDocumentTypeListItem(\n  context: StructureContext,\n  typeName: string\n): ListItemBuilder {\n  const {schema} = context\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n\n  return new ListItemBuilder(context)\n    .id(typeName)\n    .title(title)\n    .schemaType(type)\n    .child((id, childContext) => {\n      const parent = childContext.parent as Collection\n      const parentItem = isList(parent)\n        ? (parent.items.find((item) => item.id === id) as ListItem)\n        : null\n\n      let list = getDocumentTypeList(context, typeName)\n      if (parentItem && parentItem.title) {\n        list = list.title(parentItem.title)\n      }\n\n      return list\n    })\n}\n\nexport function getDocumentTypeList(\n  context: StructureContext,\n  typeNameOrSpec: string | DocumentTypeListInput\n): DocumentListBuilder {\n  const {schema, resolveDocumentNode} = context\n\n  const schemaType = typeof typeNameOrSpec === 'string' ? typeNameOrSpec : typeNameOrSpec.schemaType\n  const typeName = typeof schemaType === 'string' ? schemaType : schemaType.name\n  const spec: DocumentTypeListInput =\n    typeof typeNameOrSpec === 'string' ? {schemaType} : typeNameOrSpec\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n  const showIcons = shouldShowIcon(type)\n\n  return new DocumentTypeListBuilder(context)\n    .id(spec.id || typeName)\n    .title(spec.title || title)\n    .filter('_type == $type')\n    .params({type: typeName})\n    .schemaType(type)\n    .showIcons(showIcons)\n    .defaultOrdering(DEFAULT_SELECTED_ORDERING_OPTION.by)\n    .menuItemGroups(\n      spec.menuItemGroups || [\n        {id: 'sorting', title: 'Sort'},\n        {id: 'layout', title: 'Layout'},\n        {id: 'actions', title: 'Actions'},\n      ]\n    )\n    .child(\n      spec.child ||\n        ((documentId: string) => resolveDocumentNode({schemaType: typeName, documentId}))\n    )\n    .canHandleIntent(spec.canHandleIntent || defaultIntentChecker)\n    .menuItems(\n      spec.menuItems || [\n        // Create new (from action button) will be added in serialization step of GenericList\n\n        // Sort by <Y>\n        ...getOrderingMenuItemsForSchemaType(context, type),\n\n        // Display as <Z>\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Compact view')\n          .icon(StackCompactIcon)\n          .action('setLayout')\n          .params({layout: 'default'}),\n\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Detailed view')\n          .icon(StackIcon)\n          .action('setLayout')\n          .params({layout: 'detail'}),\n\n        // Create new (from menu) will be added in serialization step of GenericList\n      ]\n    )\n}\n","import {uniqueId} from 'lodash'\nimport type {SchemaType} from '@sanity/types'\nimport {isValidElementType} from 'react-is'\nimport {ListBuilder} from './List'\nimport {\n  getDocumentTypeListItems,\n  getDocumentTypeListItem,\n  getDocumentTypeList,\n} from './documentTypeListItems'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType, getOrderingMenuItem} from './MenuItem'\nimport {ListItemBuilder} from './ListItem'\nimport {MenuItemGroupBuilder} from './MenuItemGroup'\nimport {DocumentListBuilder} from './DocumentList'\nimport type {Divider} from './StructureNodes'\nimport {DocumentBuilder, documentFromEditor, documentFromEditorWithInitialValue} from './Document'\nimport {ComponentInput, ComponentBuilder} from './Component'\nimport {DocumentListItemBuilder} from './DocumentListItem'\nimport * as views from './views'\nimport {\n  InitialValueTemplateItemBuilder,\n  defaultInitialValueTemplateItems,\n  menuItemsFromInitialValueTemplateItems,\n} from './InitialValueTemplateItem'\nimport type {\n  StructureBuilder,\n  UserComponent,\n  StructureContext,\n  DefaultDocumentNodeResolver,\n} from './types'\nimport {Source, getConfigContextFromSource, getPublishedId} from 'sanity'\n\n/** @internal */\nexport interface StructureBuilderOptions {\n  source: Source\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n}\n\nfunction hasIcon(schemaType?: SchemaType | string): boolean {\n  if (!schemaType || typeof schemaType === 'string') {\n    return false\n  }\n\n  return Boolean(schemaType.icon)\n}\n\nfunction getDefaultStructure(context: StructureContext): ListBuilder {\n  const items = getDocumentTypeListItems(context)\n  return new ListBuilder(context)\n    .id('__root__')\n    .title('Content')\n    .items(items)\n    .showIcons(items.some((item) => hasIcon(item.getSchemaType())))\n}\n\n/** @internal */\nexport function createStructureBuilder({\n  defaultDocumentNode,\n  source,\n}: StructureBuilderOptions): StructureBuilder {\n  const configContext = getConfigContextFromSource(source)\n  const context: StructureContext = {\n    ...source,\n    getStructureBuilder: () => structureBuilder,\n    resolveDocumentNode: (options) => {\n      let builder =\n        defaultDocumentNode?.(structureBuilder, {...options, ...configContext}) ||\n        new DocumentBuilder(context)\n\n      if (!builder.getId()) {\n        builder = builder.id('documentEditor')\n      }\n\n      if (options.documentId) {\n        builder = builder.documentId(getPublishedId(options.documentId))\n      }\n\n      return builder.schemaType(options.schemaType)\n    },\n  }\n\n  const structureBuilder: StructureBuilder = {\n    defaults: () => getDefaultStructure(context),\n    documentTypeList: (...args) => getDocumentTypeList(context, ...args),\n    documentTypeListItem: (...args) => getDocumentTypeListItem(context, ...args),\n    documentTypeListItems: (...args) => getDocumentTypeListItems(context, ...args),\n    document: (...args) => new DocumentBuilder(context, ...args),\n    documentWithInitialValueTemplate: (...args) =>\n      documentFromEditorWithInitialValue(context, ...args),\n    defaultDocument: context.resolveDocumentNode,\n\n    list: (...args) => new ListBuilder(context, ...args),\n    listItem: (...args) => new ListItemBuilder(context, ...args),\n\n    menuItem: (...args) => new MenuItemBuilder(context, ...args),\n    menuItemGroup: (...args) => new MenuItemGroupBuilder(context, ...args),\n    menuItemsFromInitialValueTemplateItems: (...args) =>\n      menuItemsFromInitialValueTemplateItems(context, ...args),\n\n    documentList: (...args) => new DocumentListBuilder(context, ...args),\n    documentListItem: (...args) => new DocumentListItemBuilder(context, ...args),\n\n    orderingMenuItem: (...args) => getOrderingMenuItem(context, ...args),\n    orderingMenuItemsForType: (...args) => getOrderingMenuItemsForSchemaType(context, ...args),\n\n    editor: (...args) => documentFromEditor(context, ...args),\n\n    defaultInitialValueTemplateItems: (...args) =>\n      defaultInitialValueTemplateItems(context, ...args),\n\n    initialValueTemplateItem: (\n      templateId: string,\n      parameters?: Record<string, unknown>\n    ): InitialValueTemplateItemBuilder =>\n      new InitialValueTemplateItemBuilder(context, {\n        id: templateId,\n        parameters,\n        templateId,\n      }),\n\n    component: (spec?: ComponentInput | UserComponent) => {\n      return isValidElementType(spec)\n        ? new ComponentBuilder().component(spec as UserComponent)\n        : new ComponentBuilder(spec as ComponentInput)\n    },\n\n    divider: (): Divider => ({id: uniqueId('__divider__'), type: 'divider'}),\n\n    view: views,\n    context,\n  }\n\n  return structureBuilder\n}\n","import React, {useMemo, useState} from 'react'\nimport {DeskToolContext} from './DeskToolContext'\nimport {createStructureBuilder, DefaultDocumentNodeResolver} from './structureBuilder'\nimport {StructureResolver, UnresolvedPaneNode} from './types'\nimport {useConfigContextFromSource, useDocumentStore, useSource} from 'sanity'\n\n/** @internal */\nexport interface DeskToolProviderProps {\n  structure?: StructureResolver\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n  children: React.ReactNode\n}\n\n/** @internal */\nexport function DeskToolProvider({\n  defaultDocumentNode,\n  structure: resolveStructure,\n  children,\n}: DeskToolProviderProps): React.ReactElement {\n  const [layoutCollapsed, setLayoutCollapsed] = useState(false)\n  const source = useSource()\n  const configContext = useConfigContextFromSource(source)\n  const documentStore = useDocumentStore()\n\n  const S = useMemo(() => {\n    return createStructureBuilder({\n      defaultDocumentNode,\n      source,\n    })\n  }, [defaultDocumentNode, source])\n\n  const rootPaneNode = useMemo(() => {\n    // TODO: unify types and remove cast\n    if (resolveStructure)\n      return resolveStructure(S, {\n        ...configContext,\n        documentStore,\n      }) as UnresolvedPaneNode\n    return S.defaults() as UnresolvedPaneNode\n  }, [S, resolveStructure, configContext, documentStore])\n\n  return (\n    <DeskToolContext.Provider\n      value={useMemo(() => {\n        return {\n          features: {\n            backButton: layoutCollapsed,\n            reviewChanges: !layoutCollapsed,\n            splitPanes: !layoutCollapsed,\n            splitViews: !layoutCollapsed,\n          },\n          layoutCollapsed,\n          setLayoutCollapsed,\n          rootPaneNode,\n          structureContext: S.context,\n        }\n      }, [layoutCollapsed, rootPaneNode, S.context])}\n    >\n      {children}\n    </DeskToolContext.Provider>\n  )\n}\n"],"names":["DocTitle","props","document","documentValue","schema","useSchema","schemaType","get","_type","error","value","useValuePreview","jsxs","children","Fragment","message","jsx","title","style","color","TimeAgo","time","timeAgo","useTimeAgo","isClientError","e","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","pipe","startWith","map","visibilityState","distinctUntilChanged","switchMap","visible","timer","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","documentId","versionedClient","draftId","getDraftId","publishedId","getPublishedId","requestOptions","uri","getDataUrl","json","query","excludeContent","tag","observable","request","omitted","nonExistant","filter","doc","reason","length","some","id","fetchCrossDatasetReferences","context","checkDocumentId","of","totalCount","references","currentDataset","config","dataset","url","catchError","statusCode","useInternalReferences","createHookFromObservableFactory","documentStore","referencesClause","totalClause","fetchQuery","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","useReferringDocuments","useClient","DEFAULT_STUDIO_CLIENT_OPTIONS","useDocumentStore","internalReferences","isInternalReferencesLoading","useMemo","crossDatasetReferences","isCrossDatasetReferencesLoading","projectIds","Array","from","Set","crossDatasetReference","projectId","Boolean","sort","datasetNames","datasetName","hasUnknownDatasetNames","isLoading","PublishedStatus","updatedAt","_updatedAt","Tooltip","portal","content","Box","padding","Text","size","TextWithTone","tone","dimmed","muted","PublishIcon","DraftStatus","EditIcon","PaneItemPreview","icon","layout","presence","isRecord","isValidElement","isString","isNumber","draft","published","useMemoObservable","getPreviewStateObservable","documentPreviewStore","_id","status","Inline","space","DocumentPreviewPresence","SanityDefaultPreview","getPreviewValueWithFallback","isPlaceholder","missingContext","Error","PaneRouterContext","createContext","index","groupIndex","siblingIndex","payload","params","hasGroupSiblings","groupLength","routerPanesState","BackLink","ChildLink","ReferenceChildLink","handleEditReference","ParameterizedLink","replaceCurrent","closeCurrent","duplicateCurrent","setView","setParams","setPayload","navigateIntent","forwardRef","ref","useContext","panes","slice","state","StateLink","childId","childPayload","childParameters","rest","documentType","parentRefPath","template","type","pathToString","currentPanes","nextParams","useUnique","nextPayload","nextState","currentGroup","currentSibling","nextSibling","nextGroup","nextPanes","usePaneRouter","EMPTY_ARRAY","ReferencePreviewLink","onClick","documentPresence","useDocumentPresence","useDocumentPreviewStore","Link","useCallback","LinkComponent","linkProps","name","PreviewCard","__unstable_focusRing","as","radius","ChevronWrapper","styled","CrossDatasetReferencesDetails","details","CrossDatasetReferencesSummary","summary","TableContainer","attrs","paddingX","paddingBottom","Table","table","theme","rem","sanity","DocumentIdFlex","Flex","ReferencesCard","Card","shadow","marginBottom","flex","OtherReferenceCount","difference","placement","Container","width","InfoOutlineIcon","ConfirmDeleteDialogBody","documentTitle","action","onReferenceLinkClick","toast","useToast","renderPreviewItem","item","UnknownIcon","subtitle","documentCount","toLocaleString","normalizedDatasetNames","datasetsCount","datasetNameList","join","WarningOutlineIcon","marginLeft","direction","height","Stack","overflow","borderTop","align","marginRight","DocumentsIcon","textOverflow","ChevronDownIcon","Label","reference","gap","justify","CopyToClipboard","text","onCopy","push","Button","mode","ClipboardIcon","fontSize","DialogBody","LoadingContainer","ConfirmDeleteDialog","onCancel","onConfirm","dialogId","useId","capitalizedAction","substring","toUpperCase","showConfirmButton","Dialog","header","footer","Grid","columns","paddingY","onClose","onClickOutside","Spinner","marginTop","ConfirmDeleteDialogContainer","setError","useState","handleRetry","ErrorBoundary","onCatch","CONTEXT_MENU_POPOVER_PROPS","constrainSize","PaneContextMenuButton","items","itemGroups","onAction","groups","defaultGroup","groupMap","reduce","acc","group","Object","values","concat","g","MenuButton","button","EllipsisVerticalIcon","menu","Menu","MenuDivider","paddingTop","itemIndex","PaneContextMenuItem","popover","handleClick","hotkeys","shortcut","split","IntentButtonOrActionButton","linkRef","intent","IntentLink","displayName","MenuItem","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","PaneContext","PaneLayoutContext","usePaneLayout","pane","Root","Layer","PaneDivider","disabled","element","resize","dragging","setDragging","handleMouseDown","event","preventDefault","startX","pageX","handleMouseMove","deltaX","handleMouseUp","window","removeEventListener","addEventListener","onMouseDown","Pane","_a","_b","_c","currentMinWidth","currentMinWidthProp","currentMaxWidth","currentMaxWidthProp","flexProp","minWidth","minWidthProp","maxWidth","maxWidthProp","selected","restProps","rootElement","setRootElement","collapse","collapsed","layoutCollapsed","expand","expandedElement","mount","find","p","paneIndex","indexOf","nextPane","isLast","nextCollapsed","forwardedRef","useForwardedRef","setRef","refValue","current","useEffect","handleCollapse","handleExpand","contextValue","hidden","divider","LegacyLayerProvider","zOffset","Infinity","Provider","BoundaryElementProvider","usePane","PaneContent","forwardedAs","RootCard","PaneFooter","Layout","TitleBox","TitleTextSkeleton","TextSkeleton","TitleText","TABS_SCROLL_PADDING","TabsBox","css","rgba","base","bg","PaneHeader","actions","backButton","loading","subActions","tabs","paneElement","paneRect","useElementRect","layoutStyle","innerHeight","handleTitleClick","handleLayoutClick","LayerProvider","sizing","paddingLeft","animated","tabIndex","weight","paddingRight","IntentButton","role","InsufficientPermissionsMessageTooltip","reveal","currentUser","useCurrentUser","InsufficientPermissionsMessage","POPOVER_PROPS","getIntent","templates","typeName","t","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","templateItems","useTemplates","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","nothingGranted","every","permission","granted","permissionsById","ComposeIcon","firstItem","permissions","emptyArray","emptyObject","isNonNullable","hashObject","sortObject","v","isArray","entries","keyA","keyB","localeCompare","normalize","JSON","parse","stringify","PaneHeaderActions","memo","initialValueTemplateItems","initialValueTemplateItemsFromStructure","menuItems","menuItemGroups","actionHandlers","handleAction","console","warn","handler","actionMenuItems","contextMenuItems","nonCreateMenuItem","partition","showAsAction","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","templateParams","initialValueTemplateItem","description","combinedInitialValueTemplates","uniqBy","actionItem","actionIndex","DISABLED_REASON_TITLE","NOTHING_TO_DELETE","DeleteAction","onComplete","delete","deleteOp","useDocumentOperation","isDeleting","setIsDeleting","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","execute","handle","isPermissionsLoading","useDocumentPairPermissions","TrashIcon","label","operationLabel","onHandle","dialog","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","liveEdit","discardChanges","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","duplicate","router","useRouter","isDuplicating","setDuplicating","dupeId","uuid","CopyIcon","HistoryRestoreAction","revision","restore","isRevisionInitialVersion","isRevisionLatestVersion","RestoreIcon","DocumentPaneContext","useDocumentPane","documentPane","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","NOT_READY","getDisabledReason","publishedAt","PublishAction","publishState","setPublishState","publish","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","onHistoryOpen","editState","useEditState","_rev","hasValidationErrors","validation","isValidationErrorMarker","publishScheduled","setPublishScheduled","isSyncing","isValidating","hasDraft","doPublish","validationComplete","didPublish","delay","setTimeout","clearTimeout","transactionSyncLock","enabled","CheckmarkIcon","UnpublishAction","unpublish","UnpublishIcon","LiveEditBadge","_DEBUG","EMPTY_PARAMS","LOADING_PANE","Symbol","activePanes","setActivePanes","getIntentState","routerState","editDocumentId","isTemplate","i","canHandleIntent","call","schemaTypeName","options","paneParams","legacyEditParamsToState","decodeURIComponent","err","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","pathSegment","parsePanesSegment","toPath","route","create","intents","path","transform","panePattern","isParam","str","test","isPayload","exclusiveParams","isTruthy","parseChunks","chunks","initial","chunk","key","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","btoa","encodedParams","entry","valueFromFirstSibling","includes","flat","parseOldPanesSegment","restOfSiblings","segment","sibling","omit","buffer","match","payloadChunk","tryParsePayload","data","atob","documentActions","documentBadges","deskTool","definePlugin","prevActions","badges","prevBadges","badge","tools","MasterDetailIcon","component","lazy","Promise","resolve","then","require","DeskToolContext","SerializeError","constructor","parentPath","hint","withHelpUrl","helpId","HELP_URL","IMPLICIT_FIELDS","joinReferences","head","tail","schemaField","fields","field","refTypes","to","refType","tailFields","tailWrapper","getExtendedProjection","orderBy","ordering","ORDER_BY_UPDATED_AT","by","ORDER_BY_CREATED_AT","DEFAULT_SELECTED_ORDERING_OPTION","DEFAULT_ORDERING_OPTIONS","maybeSerializeMenuItem","MenuItemBuilder","serialize","_context","spec","clone","getAction","getTitle","getGroup","getIcon","getParams","getShowAsAction","TITLE_REQUIRED","ACTION_OR_INTENT_REQUIRED","ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE","withSpec","builder","getOrderingMenuItem","extendedProjection","SortIcon","getOrderingMenuItemsForSchemaType","orderings","maybeSerializeMenuItemGroup","MenuItemGroupBuilder","_title","getId","ID_REQUIRED","disallowedPattern","validateId","disallowedChar","startsWith","ComponentBuilder","camelCase","child","getChild","getComponent","getOptions","getMenuItems","getMenuItemGroups","componentOptions","GenericViewBuilder","kebabCase","isSerializable","view","maybeSerializeView","isComponentSpec","ComponentViewBuilder","componentOrSpec","userComponent","COMPONENT_REQUIRED","FormViewBuilder","form","createDocumentChildResolver","resolveDocumentNode","itemId","currentSegment","DocumentBuilder","paneId","getDocumentId","getSchemaType","initialValueTemplate","templateParameters","getInitialValueTemplate","getInitialValueTemplateParameters","views","getViews","urlId","DOCUMENT_ID_REQUIRED","viewIds","dupes","uniq","viewId","getDocumentOptions","opts","documentFromEditor","documentFromEditorWithInitialValue","layoutOptions","DEFAULT_INTENT_HANDLER","defaultIntentChecker","intentName","isEdit","isCreate","typedSpec","paneFilter","typeNames","getTypeNamesFromFilter","initialValueTemplates","tpl","identity","InitialValueTemplateItemBuilder","getDescription","getTemplateId","getParameters","defaultInitialValueTemplateItems","getStructureBuilder","getTypeNames","ordered","a","b","maybeSerializeInitialValueTemplateItem","menuItemsFromInitialValueTemplateItems","pickBy","noChildResolver","shallowIntentChecker","GenericListBuilder","initialValueTemplatesSpecified","defaultLayout","getDefaultLayout","getCanHandleIntent","showIcons","displayOptions","getShowIcons","getInitialValueTemplates","resolveTypeForDocument","getClient","replace","types","validateFilter","trim","QUERY_PROVIDED_FOR_FILTER","createDocumentChildResolverForItem","parentItem","parent","DocumentListBuilder","apiVersion","getApiVersion","getFilter","defaultOrdering","getDefaultOrdering","FILTER_REQUIRED","inferInitialValueTemplates","inferTypeName","getSpec","flatMap","resolveNewDocumentOptions","option","getTypeNamesFromEqualityFilter","getTypeNamesFromInTypesFilter","pattern","matches","exec","candidate","normalized","getArgType","thing","ListBuilder","isPromise","isListItem","defaultCanHandleIntent","isDocumentListItem","resolveChildForItem","target","maybeSerializeListItem","ListItemBuilder","listItem","gotWhat","helpText","INVALID_LIST_ITEM","getItems","LIST_ITEMS_MUST_BE_ARRAY","serializedItems","val","dupeIds","dupeDesc","LIST_ITEM_IDS_MUST_BE_UNIQUE","showIcon","getShowIcon","titleIsOptional","SCHEMA_TYPE_NOT_FOUND","serializeOptions","listChild","originalChild","childOptions","createDefaultChildResolver","DocumentListItemBuilder","SCHEMA_TYPE_REQUIRED","DocumentTypeListBuilder","cloneWithoutDefaultIntentHandler","shouldOverride","override","shouldShowIcon","preview","prepare","select","media","BUNDLED_DOC_TYPES","isBundledDocType","isDocumentType","isList","collection","getDocumentTypes","n","getDocumentTypeListItems","getDocumentTypeListItem","startCase","childContext","list","getDocumentTypeList","typeNameOrSpec","StackCompactIcon","StackIcon","hasIcon","getDefaultStructure","createStructureBuilder","defaultDocumentNode","source","configContext","getConfigContextFromSource","structureBuilder","defaults","documentTypeList","args","documentTypeListItem","documentTypeListItems","documentWithInitialValueTemplate","defaultDocument","menuItem","menuItemGroup","documentList","documentListItem","orderingMenuItem","orderingMenuItemsForType","editor","isValidElementType","uniqueId","DeskToolProvider","structure","resolveStructure","setLayoutCollapsed","useSource","useConfigContextFromSource","S","rootPaneNode","features","reviewChanges","splitPanes","splitViews","structureContext"],"mappings":"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"}