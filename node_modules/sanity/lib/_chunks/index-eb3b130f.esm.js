const _excluded = ["index", "pane", "paneKey"],
  _excluded2 = ["child", "component", "menuItems", "menuItemGroups", "title", "type"];
var _templateObject;
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { jsx, jsxs } from 'react/jsx-runtime';
import { useState, createElement, isValidElement } from 'react';
import { isValidElementType } from 'react-is';
import 'sanity';
import { Button, Box } from '@sanity/ui';
import { g as PaneHeader, q as PaneHeaderActions, B as BackLink, k as usePane, f as Pane } from './desk-4ed64687.esm.js';
import { ArrowLeftIcon } from '@sanity/icons';
import 'sanity/router';
import '@sanity/types';
import 'lodash/omit.js';
import '@sanity/util/paths';
import 'lodash/isNumber.js';
import 'lodash/isString.js';
import 'react-rx';
import { u as useDeskTool } from './index-ae1970a3.esm.js';
import styled from 'styled-components';
import 'rxjs';
import 'rxjs/operators';
import 'react-copy-to-clipboard';
import 'lodash/partition.js';
import 'lodash/uniqBy.js';
import '@sanity/uuid';
import 'lodash/camelCase.js';
import 'lodash/uniq.js';
import 'lodash/kebabCase.js';
import 'lodash/pickBy.js';
import 'lodash/find.js';
import 'lodash/uniqueId.js';
import 'lodash/startCase.js';
import 'nanoid';
import '@sanity/generate-help-url';
import 'lodash/isEqual.js';
import 'is-hotkey';
import '@sanity/schema/_internal';
import 'lodash/upperFirst.js';
import '@rexxars/react-json-inspector';
import 'hashlru';
import 'lodash/negate.js';
import 'framer-motion';
function UserComponentPaneHeader(props) {
  const {
    actionHandlers,
    index,
    menuItems,
    menuItemGroups,
    title
  } = props;
  const {
    features
  } = useDeskTool();
  if (!(menuItems == null ? void 0 : menuItems.length) && !title) {
    return null;
  }
  return /* @__PURE__ */jsx(PaneHeader, {
    actions: /* @__PURE__ */jsx(PaneHeaderActions, {
      menuItems,
      menuItemGroups,
      actionHandlers
    }),
    backButton: features.backButton && index > 0 && /* @__PURE__ */jsx(Button, {
      as: BackLink,
      "data-as": "a",
      icon: ArrowLeftIcon,
      mode: "bleed"
    }),
    title
  });
}
const Root = styled(Box)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  position: relative;\n"])));
function UserComponentPaneContent(props) {
  const {
    children
  } = props;
  const {
    collapsed
  } = usePane();
  return /* @__PURE__ */jsx(Root, {
    hidden: collapsed,
    height: "fill",
    overflow: "auto",
    children
  });
}
function UserComponentPane(props) {
  const {
      index,
      pane,
      paneKey
    } = props,
    restProps = _objectWithoutProperties(props, _excluded);
  const {
      child,
      component,
      menuItems,
      menuItemGroups,
      title = "",
      type: _unused
    } = pane,
    restPane = _objectWithoutProperties(pane, _excluded2);
  const [ref, setRef] = useState(null);
  return /* @__PURE__ */jsxs(Pane, {
    id: paneKey,
    minWidth: 320,
    selected: restProps.isSelected,
    children: [/* @__PURE__ */jsx(UserComponentPaneHeader, {
      actionHandlers: ref == null ? void 0 : ref.actionHandlers,
      index,
      menuItems,
      menuItemGroups,
      title
    }), /* @__PURE__ */jsxs(UserComponentPaneContent, {
      children: [isValidElementType(component) && createElement(component, _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, restProps), restPane), {
        ref: setRef
      }), {}, {
        child,
        paneKey
      })), isValidElement(component) && component]
    })]
  });
}
export { UserComponentPane as default };
//# sourceMappingURL=index-eb3b130f.esm.js.map
